{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-1.5-flash-latest',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/water-quality-checker.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Analyzes water quality data from testing kits or sensors.\n *\n * - checkWaterQuality - A function to analyze water quality parameters.\n * - WaterQualityInput - The input type for the checkWaterQuality function.\n * - WaterQualityOutput - The return type for the checkWaterQuality function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst WaterQualityInputSchema = z.object({\n  turbidity: z.number().describe('The turbidity level of the water (in NTU).'),\n  ph: z.number().min(0).max(14).describe('The pH level of the water.'),\n  bacterialPresence: z.enum(['positive', 'negative']).describe('Whether bacterial presence is positive or negative.'),\n});\nexport type WaterQualityInput = z.infer<typeof WaterQualityInputSchema>;\n\nconst WaterQualityOutputSchema = z.object({\n    analysis: z.string().describe(\"A detailed analysis of the water quality based on the provided parameters.\"),\n    isSafe: z.boolean().describe(\"A determination of whether the water is safe to drink or not.\"),\n    recommendations: z.array(z.string()).describe(\"A list of recommendations for improving water quality if necessary.\"),\n});\nexport type WaterQualityOutput = z.infer<typeof WaterQualityOutputSchema>;\n\nexport async function checkWaterQuality(input: WaterQualityInput): Promise<WaterQualityOutput> {\n  return waterQualityCheckerFlow(input);\n}\n\nconst waterQualityCheckerPrompt = ai.definePrompt({\n  name: 'waterQualityCheckerPrompt',\n  input: {schema: WaterQualityInputSchema},\n  output: {schema: WaterQualityOutputSchema},\n  prompt: `You are an expert in water quality analysis. A user has provided data from a water testing kit or IoT sensor. Analyze the data and provide a detailed report.\n\nThe ideal pH for drinking water is between 6.5 and 8.5.\nThe ideal turbidity for drinking water is below 1 NTU, but up to 5 NTU is acceptable.\nAny positive bacterial presence is considered unsafe.\n\nBased on the following data, determine if the water is safe to drink, provide a detailed analysis of the results, and offer recommendations for treatment if needed.\n\nTurbidity: {{{turbidity}}} NTU\npH Level: {{{ph}}}\nBacterial Presence: {{{bacterialPresence}}}\n`,\n});\n\nconst waterQualityCheckerFlow = ai.defineFlow(\n  {\n    name: 'waterQualityCheckerFlow',\n    inputSchema: WaterQualityInputSchema,\n    outputSchema: WaterQualityOutputSchema,\n  },\n  async input => {\n    const {output} = await waterQualityCheckerPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,QAAQ,CAAC;IACvC,mBAAmB,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAY;KAAW,EAAE,QAAQ,CAAC;AAC/D;AAGA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,QAAQ,uIAAA,CAAA,IAAC,CAAC,OAAO,GAAG,QAAQ,CAAC;IAC7B,iBAAiB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAClD;AAGO,eAAe,kBAAkB,KAAwB;IAC9D,OAAO,wBAAwB;AACjC;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAChD,MAAM;IACN,OAAO;QAAC,QAAQ;IAAuB;IACvC,QAAQ;QAAC,QAAQ;IAAwB;IACzC,QAAQ,CAAC;;;;;;;;;;;AAWX,CAAC;AACD;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,0BAA0B;IACjD,OAAO;AACT;;;IA/BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/water-quality/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {checkWaterQuality as '40d5ba542afd011c9518a18a7459039c9b65f6f55c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/water-quality/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/water-quality/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/water-quality/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/water-quality/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/water-quality/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/water-quality/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}