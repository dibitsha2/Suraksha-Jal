{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/health-chatbot.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Provides a general-purpose AI health chatbot.\n *\n * - healthChat - A function to interact with the health chatbot.\n * - HealthChatInput - The input type for the healthChat function.\n * - HealthChatOutput - The return type for the healthChat function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst HealthChatInputSchema = z.object({\n  message: z.string().describe('The user\\'s message to the chatbot.'),\n  history: z.array(z.object({\n    role: z.enum(['user', 'model']),\n    content: z.string(),\n  })).optional().describe('The conversation history.'),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type HealthChatInput = z.infer<typeof HealthChatInputSchema>;\n\nconst HealthChatOutputSchema = z.object({\n  response: z.string().describe('The chatbot\\'s response to the user.'),\n});\nexport type HealthChatOutput = z.infer<typeof HealthChatOutputSchema>;\n\nexport async function healthChat(input: HealthChatInput): Promise<HealthChatOutput> {\n  return healthChatFlow(input);\n}\n\nconst healthChatPrompt = ai.definePrompt({\n  name: 'healthChatPrompt',\n  input: {schema: HealthChatInputSchema},\n  output: {schema: HealthChatOutputSchema},\n  prompt: `You are \"Suraksha Jal,\" a friendly and helpful AI health assistant specializing in waterborne diseases and general health inquiries. Your goal is to provide clear, accurate, and safe health information.\n\n- If the user asks for medical advice, a diagnosis, or a prescription, you must gently refuse and strongly advise them to consult a qualified healthcare professional. Your suggestions are for informational purposes only.\n- You can answer questions about symptoms, diseases (especially waterborne ones), medication uses, and general health and safety tips (like hygiene and water purification).\n- Keep your responses concise and easy to understand.\n- You have access to the conversation history to maintain context.\n{{#if language}}\n- The user's preferred language is {{language}}. You MUST respond in that language.\n{{/if}}\n\nCurrent User Message:\n{{{message}}}\n`,\n});\n\nconst healthChatFlow = ai.defineFlow(\n  {\n    name: 'healthChatFlow',\n    inputSchema: HealthChatInputSchema,\n    outputSchema: HealthChatOutputSchema,\n  },\n  async input => {\n    // Note: The history is available in the prompt context but not explicitly used here.\n    // In a more complex setup, history would be passed to the model.\n    const {output} = await healthChatPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA6BsB,aAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ai-chat.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { \n  CornerDownLeft,\n  Loader2,\n  User,\n  Bot\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormMessage } from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { healthChat } from '@/ai/flows/health-chatbot';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { cn } from '@/lib/utils';\n\n\nconst chatSchema = z.object({\n  message: z.string().min(1, 'Message cannot be empty.'),\n});\n\ntype ChatValues = z.infer<typeof chatSchema>;\n\ninterface Message {\n    role: 'user' | 'model';\n    content: string;\n}\n\nexport function AiChat() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n  const { effectiveLanguage } = useLanguage();\n\n  const form = useForm<ChatValues>({\n    resolver: zodResolver(chatSchema),\n    defaultValues: { message: '' },\n  });\n  \n  useEffect(() => {\n    // Scroll to the bottom when messages change\n    if (scrollAreaRef.current) {\n      scrollAreaRef.current.scrollTo({\n        top: scrollAreaRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [messages]);\n\n  const onSubmit: SubmitHandler<ChatValues> = async (data) => {\n    setLoading(true);\n    setError(null);\n\n    const userMessage: Message = { role: 'user', content: data.message };\n    setMessages((prev) => [...prev, userMessage]);\n    form.reset();\n\n    try {\n      const history = messages.map(msg => ({ role: msg.role, content: msg.content }));\n      const response = await healthChat({\n        message: data.message,\n        history: history,\n        language: effectiveLanguage,\n      });\n      const modelMessage: Message = { role: 'model', content: response.response };\n      setMessages((prev) => [...prev, modelMessage]);\n    } catch (e) {\n      console.error(e);\n      setError('An error occurred. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n      <Card className=\"flex flex-col flex-1 h-[600px]\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-2xl\">AI Health Assistant</CardTitle>\n          <CardDescription>\n            Ask me anything about waterborne diseases, symptoms, or general health.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex flex-col flex-1\">\n          <ScrollArea className=\"flex-1 space-y-4 p-4 border rounded-lg mb-4\" ref={scrollAreaRef}>\n            {messages.length === 0 ? (\n                <div className=\"flex flex-col items-center justify-center h-full text-center text-muted-foreground\">\n                    <Bot className=\"h-12 w-12 mb-4\" />\n                    <p>No messages yet. Start the conversation!</p>\n                </div>\n            ) : (\n                messages.map((msg, index) => (\n                    <div key={index} className={cn(\"flex items-start gap-4 mb-4\", msg.role === 'user' ? 'justify-end' : 'justify-start')}>\n                         {msg.role === 'model' && (\n                             <div className=\"p-2 bg-primary text-primary-foreground rounded-full\">\n                                <Bot className=\"h-6 w-6\" />\n                             </div>\n                         )}\n                         <div className={cn(\"max-w-[75%] p-3 rounded-lg\", msg.role === 'user' ? 'bg-primary/10' : 'bg-muted')}>\n                             <p className=\"text-sm whitespace-pre-wrap\">{msg.content}</p>\n                         </div>\n                          {msg.role === 'user' && (\n                             <div className=\"p-2 bg-secondary text-secondary-foreground rounded-full\">\n                                <User className=\"h-6 w-6\" />\n                             </div>\n                         )}\n                    </div>\n                ))\n            )}\n            {loading && messages[messages.length - 1]?.role === 'user' && (\n                 <div className=\"flex items-start gap-4 mb-4 justify-start\">\n                    <div className=\"p-2 bg-primary text-primary-foreground rounded-full\">\n                        <Bot className=\"h-6 w-6\" />\n                    </div>\n                    <div className=\"max-w-[75%] p-3 rounded-lg bg-muted flex items-center gap-2\">\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\n                        <span className=\"text-sm text-muted-foreground\">Thinking...</span>\n                    </div>\n                </div>\n            )}\n          </ScrollArea>\n           <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"relative\">\n              <FormField\n                control={form.control}\n                name=\"message\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"e.g., What are the symptoms of Cholera?\"\n                        className=\"min-h-[60px] pr-20\"\n                        {...field}\n                        onKeyDown={(e) => {\n                            if (e.key === 'Enter' && !e.shiftKey) {\n                                e.preventDefault();\n                                form.handleSubmit(onSubmit)();\n                            }\n                        }}\n                      />\n                    </FormControl>\n                    <FormMessage className=\"absolute -bottom-6 left-2\" />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" size=\"icon\" disabled={loading} className=\"absolute top-1/2 -translate-y-1/2 right-3\">\n                {loading ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <CornerDownLeft className=\"h-4 w-4\" />}\n                <span className=\"sr-only\">Send message</span>\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n         {error && (\n            <CardContent>\n              <div className=\"p-4 bg-destructive/10 text-destructive rounded-md text-sm\">\n                {error}\n              </div>\n            </CardContent>\n          )}\n      </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { \n  Stethoscope, \n  Shield, \n  BarChart, \n  Bell, \n  AlertTriangle,\n  Users,\n  TrendingDown,\n  HeartCrack\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/hooks/use-language';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { AiChat } from '@/components/ai-chat';\nimport { useToast } from '@/hooks/use-toast';\nimport { add } from 'date-fns';\n\nconst dailyData = [\n  { name: 'Today', cases: 30, recovered: 20, deaths: 2 },\n  { name: 'Yesterday', cases: 45, recovered: 30, deaths: 5 },\n  { name: 'Day Before', cases: 28, recovered: 25, deaths: 1 },\n];\n\nconst monthlyData = [\n  { name: 'This Month', cases: 1200, recovered: 900, deaths: 50 },\n  { name: 'Last Month', cases: 1500, recovered: 1100, deaths: 75 },\n  { name: '2 Months Ago', cases: 950, recovered: 800, deaths: 30 },\n];\n\nconst yearlyData = [\n  { name: 'This Year', cases: 15000, recovered: 12000, deaths: 600 },\n  { name: 'Last Year', cases: 18000, recovered: 15000, deaths: 800 },\n];\n\nexport default function DashboardPage() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n\n  const handleReminderClick = () => {\n    try {\n        const newReminder = {\n            id: Date.now(),\n            title: 'Replace plastic water container',\n            startDate: new Date().toISOString(),\n            dueDate: add(new Date(), { months: 5 }).toISOString(),\n        };\n\n        const existingReminders = JSON.parse(localStorage.getItem('reminders') || '[]');\n        const updatedReminders = [...existingReminders, newReminder];\n        localStorage.setItem('reminders', JSON.stringify(updatedReminders));\n        \n        toast({\n            title: \"Reminder Set!\",\n            description: \"We'll remind you to change your plastic container in 5 months.\",\n        });\n    } catch (error) {\n        console.error('Failed to save reminder:', error);\n        toast({\n            variant: 'destructive',\n            title: 'Error',\n            description: 'Could not save your reminder. Please try again.',\n        });\n    }\n  }\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <div className=\"flex items-center\">\n        <h1 className=\"text-lg font-semibold md:text-2xl font-headline\">{t('dashboard')}</h1>\n      </div>\n      \n      <div\n        className=\"flex flex-1 items-center justify-center rounded-lg border border-dashed shadow-sm bg-cover bg-center min-h-[300px]\"\n        style={{ backgroundImage: \"url('https://picsum.photos/1200/400?blur=10')\" }}\n        data-ai-hint=\"water droplets\"\n      >\n        <div className=\"flex flex-col items-center gap-4 text-center bg-background/80 p-8 rounded-lg\">\n          <div className=\"flex items-center gap-8\">\n            <Stethoscope className=\"h-16 w-16 text-primary\" />\n            <Shield className=\"h-16 w-16 text-primary\" />\n          </div>\n          <h3 className=\"text-2xl font-bold tracking-tight font-headline\">\n            {t('welcome')}! Your Health is Our Priority\n          </h3>\n          <p className=\"text-sm text-muted-foreground max-w-sm\">\n            {t('checkSymptomsPrompt')}\n          </p>\n          <div className=\"flex gap-4 mt-4\">\n            <Button asChild>\n              <Link href=\"/dashboard/symptom-checker\">{t('symptomChecker')}</Link>\n            </Button>\n            <Button variant=\"outline\" asChild>\n              <Link href=\"/dashboard/precautions\">{t('precautions')}</Link>\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      <Card>\n          <CardHeader>\n              <div className=\"flex items-center gap-2\">\n                <BarChart className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-headline text-2xl\">Waterborne Disease Statistics</CardTitle>\n              </div>\n              <CardDescription>\n                  This section displays mock data for waterborne diseases. In a real application, this would be connected to a live public health data source.\n              </CardDescription>\n          </CardHeader>\n          <CardContent>\n              <Tabs defaultValue=\"monthly\" className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-3\">\n                      <TabsTrigger value=\"daily\">Daily</TabsTrigger>\n                      <TabsTrigger value=\"monthly\">Monthly</TabsTrigger>\n                      <TabsTrigger value=\"yearly\">Yearly</TabsTrigger>\n                  </TabsList>\n                  <TabsContent value=\"daily\">\n                      <StatsView data={dailyData} period=\"Daily\" />\n                  </TabsContent>\n                  <TabsContent value=\"monthly\">\n                       <StatsView data={monthlyData} period=\"Monthly\" />\n                  </TabsContent>\n                  <TabsContent value=\"yearly\">\n                       <StatsView data={yearlyData} period=\"Yearly\" />\n                  </TabsContent>\n              </Tabs>\n          </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n            <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-6 w-6 text-primary\" />\n                <CardTitle className=\"font-headline text-2xl\">Water Storage Safety Tip</CardTitle>\n            </div>\n             <CardDescription>\n                  A small change for a healthier life.\n              </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n            <blockquote className=\"border-l-4 border-primary pl-4 italic text-muted-foreground\">\n                \"Instead of using plastics to store water, use copper vessels.\"\n            </blockquote>\n            <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-4 p-4 bg-muted/50 rounded-lg\">\n                <div className=\"flex-1\">\n                    <p className=\"font-semibold\">Still using plastic containers?</p>\n                    <p className=\"text-sm text-muted-foreground\">It's recommended to replace them periodically to avoid chemical leaching.</p>\n                </div>\n                 <Button onClick={handleReminderClick}>\n                    <Bell className=\"mr-2 h-4 w-4\" />\n                    Remind me in 5 months\n                </Button>\n            </div>\n        </CardContent>\n      </Card>\n      \n      <AiChat />\n    </div>\n  );\n}\n\n\nfunction StatsView({ data, period }: { data: any[], period: string }) {\n    const totalCases = data.reduce((acc, item) => acc + item.cases, 0);\n    const totalRecovered = data.reduce((acc, item) => acc + item.recovered, 0);\n    const totalDeaths = data.reduce((acc, item) => acc + item.deaths, 0);\n\n    return (\n        <div className=\"space-y-6 pt-4\">\n            <div className=\"grid gap-4 md:grid-cols-3\">\n                <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">New Cases</CardTitle>\n                        <Users className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{totalCases.toLocaleString()}</div>\n                        <p className=\"text-xs text-muted-foreground\">Total {period.toLowerCase()} cases</p>\n                    </CardContent>\n                </Card>\n                 <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">Recoveries</CardTitle>\n                        <TrendingDown className=\"h-4 w-4 text-green-500\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{totalRecovered.toLocaleString()}</div>\n                         <p className=\"text-xs text-muted-foreground\">Total {period.toLowerCase()} recoveries</p>\n                    </CardContent>\n                </Card>\n                <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                        <CardTitle className=\"text-sm font-medium\">Deaths</CardTitle>\n                        <HeartCrack className=\"h-4 w-4 text-destructive\" />\n                    </CardHeader>\n                    <CardContent>\n                        <div className=\"text-2xl font-bold\">{totalDeaths.toLocaleString()}</div>\n                         <p className=\"text-xs text-muted-foreground\">Total {period.toLowerCase()} deaths</p>\n                    </CardContent>\n                </Card>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}