{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/medicine-checker.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Provides AI-powered information about a specific medicine.\n *\n * - getMedicineInformation - A function to retrieve detailed information about a specific medicine.\n * - MedicineInformationInput - The input type for the getMedicineInformation function.\n * - MedicineInformationOutput - The return type for the getMedicineInformation function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MedicineInformationInputSchema = z.object({\n  medicineName: z.string().optional().describe('The name of the medicine to get information about.'),\n  image: z.string().optional().describe(\n      \"A photo of the medicine, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type MedicineInformationInput = z.infer<typeof MedicineInformationInputSchema>;\n\nconst MedicineInformationOutputSchema = z.object({\n  usageInfo: z.string().describe('Detailed and accurate information about what the medicine is used for, including its primary uses, and how it works. Include a disclaimer that this is not a substitute for professional medical advice and users should consult a doctor or pharmacist.'),\n});\nexport type MedicineInformationOutput = z.infer<typeof MedicineInformationOutputSchema>;\n\nexport async function getMedicineInformation(input: MedicineInformationInput): Promise<MedicineInformationOutput> {\n  return medicineInformationFlow(input);\n}\n\nconst medicineInformationPrompt = ai.definePrompt({\n  name: 'medicineInformationPrompt',\n  input: {schema: MedicineInformationInputSchema},\n  output: {schema: MedicineInformationOutputSchema},\n  prompt: `You are a pharmacist and medical expert. A user wants to know about a specific medicine. Provide accurate and easy-to-understand information about what the medicine is used for. Be clear and concise.\n  \n  {{#if image}}\n  Analyse the provided image to identify the medicine.\n  Image: {{media url=image}}\n  {{/if}}\n\n  {{#if medicineName}}\n  Medicine Name: {{{medicineName}}}\n  {{/if}}\n  \n  {{#if language}}\nRespond in the user's preferred language: {{{language}}}.\n{{/if}}\n`,\n});\n\nconst medicineInformationFlow = ai.defineFlow(\n  {\n    name: 'medicineInformationFlow',\n    inputSchema: MedicineInformationInputSchema,\n    outputSchema: MedicineInformationOutputSchema,\n  },\n  async input => {\n    const {output} = await medicineInformationPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA4BsB,yBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/medicine-dosage-suggester.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides AI-powered information about medicine dosage and instructions.\n *\n * - getMedicineDosage - A function to retrieve dosage information for a specific medicine.\n * - MedicineDosageInput - The input type for the getMedicineDosage function.\n * - MedicineDosageOutput - The return type for the getMedicineDosage function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MedicineDosageInputSchema = z.object({\n  medicineName: z.string().describe('The name of the medicine to get dosage information about.'),\n  age: z.number().describe(\"The user's age.\"),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type MedicineDosageInput = z.infer<typeof MedicineDosageInputSchema>;\n\nconst MedicineDosageOutputSchema = z.object({\n  dosage: z.string().describe('The recommended dosage amount for the given age (e.g., \"500mg\", \"1 tablet\").'),\n  timing: z.string().describe('Instructions on when to take the medicine relative to meals (e.g., \"After breakfast and dinner\", \"With food\").'),\n  timeOfDay: z.string().describe('The recommended time of day to take the medicine (e.g., \"Morning and Evening\", \"Before sleeping at night\").'),\n  disclaimer: z.string().describe('A strong disclaimer that this is not medical advice and the user must consult a qualified doctor or pharmacist for accurate dosage information.'),\n});\nexport type MedicineDosageOutput = z.infer<typeof MedicineDosageOutputSchema>;\n\nexport async function getMedicineDosage(input: MedicineDosageInput): Promise<MedicineDosageOutput> {\n  return medicineDosageFlow(input);\n}\n\nconst medicineDosagePrompt = ai.definePrompt({\n  name: 'medicineDosagePrompt',\n  input: {schema: MedicineDosageInputSchema},\n  output: {schema: MedicineDosageOutputSchema},\n  prompt: `You are an expert pharmacist. Based on the medicine name and user's age, provide typical dosage instructions for over-the-counter use. Be accurate and clear.\n\nSpecifically provide the following:\n1.  **Dosage**: The amount to take (e.g., \"500mg\", \"1 tablet\").\n2.  **Timing**: When to take it relative to food (e.g., \"With food\", \"On an empty stomach\").\n3.  **Time of Day**: What time of day to take it (e.g., \"Morning and Evening\", \"Only at night\").\n\nYou MUST provide a strong disclaimer that this information is for general guidance only and is not a substitute for professional medical advice. The user MUST consult a qualified doctor or pharmacist before taking any medication, as dosage can vary based on many factors.\n\nMedicine Name: {{{medicineName}}}\nUser's Age: {{{age}}}\n\n{{#if language}}\nRespond in the user's preferred language: {{{language}}}.\n{{/if}}\n`,\n});\n\nconst medicineDosageFlow = ai.defineFlow(\n  {\n    name: 'medicineDosageFlow',\n    inputSchema: MedicineDosageInputSchema,\n    outputSchema: MedicineDosageOutputSchema,\n  },\n  async input => {\n    const {output} = await medicineDosagePrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA4BsB,oBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Converts text to speech.\n *\n * - textToSpeech - A function to convert text to speech.\n * - TextToSpeechInput - The input type for the textToSpeech function.\n * - TextToSpeechOutput - The return type for the textToSpeech function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport { z } from 'genkit';\nimport wav from 'wav';\n\nconst TextToSpeechInputSchema = z.object({\n  text: z.string().describe('The text to convert to speech.'),\n});\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\n\nconst TextToSpeechOutputSchema = z.object({\n  audioDataUri: z\n    .string()\n    .describe(\n      \"The speech audio, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"\n    ),\n});\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\n\nexport async function textToSpeech(input: TextToSpeechInput): Promise<TextToSpeechOutput> {\n  return textToSpeechFlow(input);\n}\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    let bufs = [] as any[];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: TextToSpeechInputSchema,\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (input) => {\n    const { media } = await ai.generate({\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: input.text,\n    });\n\n    if (!media) {\n      throw new Error('No media returned from TTS model.');\n    }\n\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n\n    const wavBase64 = await toWav(audioBuffer);\n\n    return {\n      audioDataUri: `data:audio/wav;base64,${wavBase64}`,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;;IA6BsB,eAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/medicine-checker/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Loader2, Sparkles, AlertTriangle, Pill, Info, Camera, Video, ScanLine, Volume2, StopCircle, HelpCircle } from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport {\n  getMedicineInformation,\n  type MedicineInformationOutput,\n} from '@/ai/flows/medicine-checker';\nimport {\n  getMedicineDosage,\n  type MedicineDosageOutput,\n} from '@/ai/flows/medicine-dosage-suggester';\nimport { textToSpeech } from '@/ai/flows/text-to-speech';\nimport { useLanguage } from '@/hooks/use-language';\nimport { useToast } from '@/hooks/use-toast';\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport Image from 'next/image';\n\nconst medicineSchema = z.object({\n  medicineName: z.string().optional(),\n});\n\ntype MedicineValues = z.infer<typeof medicineSchema>;\n\nconst dosageSchema = z.object({\n    age: z.coerce.number().min(1, 'Age must be 1 or greater'),\n});\ntype DosageValues = z.infer<typeof dosageSchema>;\n\nconst commonMedicines = [\n    'Paracetamol',\n    'Ibuprofen',\n    'Aspirin',\n    'Cetirizine',\n    'Loratadine',\n    'Diphenhydramine',\n    'Ranitidine',\n    'Omeprazole',\n    'Loperamide',\n    'Oral Rehydration Salts (ORS)',\n    'Amoxicillin',\n    'Azithromycin',\n    'Metformin',\n    'Atorvastatin',\n    'Amlodipine',\n    'Lisinopril',\n    'Salbutamol',\n    'Montelukast',\n    'Furosemide',\n    'Gabapentin',\n    'Sertraline',\n    'Escitalopram',\n    'Fluoxetine',\n    'Ciprofloxacin',\n    'Metronidazole',\n    'Doxycycline',\n    'Prednisone',\n    'Tramadol',\n    'Diclofenac',\n    'Simvastatin',\n    'Levothyroxine',\n];\n\nexport default function MedicineCheckerPage() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [result, setResult] = useState<MedicineInformationOutput | null>(null);\n  const { t, effectiveLanguage } = useLanguage();\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [isSuggestionsVisible, setIsSuggestionsVisible] = useState(false);\n  const { toast } = useToast();\n\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [hasCameraPermission, setHasCameraPermission] = useState<boolean | null>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [capturedImage, setCapturedImage] = useState<string | null>(null);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [resultFromImage, setResultFromImage] = useState(false);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [isDosageDialogOpen, setIsDosageDialogOpen] = useState(false);\n  const [isDosageLoading, setIsDosageLoading] = useState(false);\n  const [dosageResult, setDosageResult] = useState<MedicineDosageOutput | null>(null);\n  const [isDosageResultOpen, setIsDosageResultOpen] = useState(false);\n\n  const form = useForm<MedicineValues>({\n    resolver: zodResolver(medicineSchema),\n    defaultValues: { medicineName: '' },\n  });\n\n  const dosageForm = useForm<DosageValues>({\n    resolver: zodResolver(dosageSchema),\n  });\n\n  useEffect(() => {\n    try {\n        const savedProfile = localStorage.getItem('userProfile');\n        if (savedProfile) {\n            const profile = JSON.parse(savedProfile);\n            if (profile.age) {\n                dosageForm.setValue('age', profile.age);\n            }\n        }\n    } catch (error) {\n        console.error('Failed to load user profile for dosage form:', error);\n    }\n  }, [dosageForm]);\n  \n  useEffect(() => {\n    if (isCameraOpen) {\n        const getCameraPermission = async () => {\n          try {\n            const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: 'environment' }});\n            setHasCameraPermission(true);\n\n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          } catch (error) {\n            console.error('Error accessing camera:', error);\n            setHasCameraPermission(false);\n            setIsCameraOpen(false);\n            toast({\n              variant: 'destructive',\n              title: 'Camera Access Denied',\n              description: 'Please enable camera permissions in your browser settings to use this feature.',\n            });\n          }\n        };\n        getCameraPermission();\n    } else {\n        if (videoRef.current?.srcObject) {\n            const stream = videoRef.current.srcObject as MediaStream;\n            stream.getTracks().forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n        }\n    }\n    \n    // Cleanup audio on component unmount\n    return () => {\n        if (audioRef.current) {\n            audioRef.current.pause();\n            audioRef.current = null;\n        }\n    }\n  }, [isCameraOpen, toast]);\n  \n  const handleCapture = () => {\n    if (videoRef.current && canvasRef.current) {\n        const video = videoRef.current;\n        const canvas = canvasRef.current;\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n            const dataUrl = canvas.toDataURL('image/jpeg');\n            setCapturedImage(dataUrl);\n            setIsCameraOpen(false); // Close camera after capture\n        }\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    form.setValue('medicineName', value);\n    if (value.length > 0) {\n      setCapturedImage(null); // Clear image if user types\n      setResultFromImage(false);\n      const filteredSuggestions = commonMedicines.filter((med) =>\n        med.toLowerCase().includes(value.toLowerCase())\n      );\n      setSuggestions(filteredSuggestions);\n      setIsSuggestionsVisible(true);\n    } else {\n      setSuggestions([]);\n      setIsSuggestionsVisible(false);\n    }\n  };\n\n  const handleSuggestionClick = (medicine: string) => {\n    form.setValue('medicineName', medicine, { shouldValidate: true });\n    setSuggestions([]);\n    setIsSuggestionsVisible(false);\n  };\n\n  const handlePlayback = async (text: string) => {\n      if (audioRef.current && !audioRef.current.paused) {\n        stopPlayback();\n        return;\n      }\n      setIsSpeaking(true);\n      try {\n        const { audioDataUri } = await textToSpeech({ text });\n        const audio = new Audio(audioDataUri);\n        audioRef.current = audio;\n        audio.play();\n        audio.onended = () => {\n            setIsSpeaking(false);\n            audioRef.current = null;\n        }\n      } catch (e) {\n        console.error(e);\n        toast({ variant: 'destructive', title: 'Playback Error', description: 'Could not play the audio response.'});\n        setIsSpeaking(false);\n      }\n  }\n\n  const stopPlayback = () => {\n    if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n        audioRef.current = null;\n        setIsSpeaking(false);\n    }\n  }\n\n  const onSubmit: SubmitHandler<MedicineValues> = async (data) => {\n    if (!data.medicineName && !capturedImage) {\n        toast({\n            variant: 'destructive',\n            title: 'Input Required',\n            description: 'Please enter a medicine name or scan an image.',\n        });\n        return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setIsSuggestionsVisible(false);\n    stopPlayback();\n    const isImageSearch = !!capturedImage;\n    setResultFromImage(isImageSearch);\n\n    try {\n      const response = await getMedicineInformation({\n        medicineName: data.medicineName,\n        image: capturedImage ?? undefined,\n        language: effectiveLanguage,\n      });\n      setResult(response);\n    } catch (e) {\n      console.error(e);\n      setError('An error occurred while getting information. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onDosageSubmit: SubmitHandler<DosageValues> = async (data) => {\n    const medicineName = form.getValues('medicineName');\n    if (!medicineName) {\n        toast({\n            variant: 'destructive',\n            title: 'Medicine Name Missing',\n            description: 'Please find a medicine first before checking how to take it.',\n        });\n        return;\n    }\n    \n    setIsDosageLoading(true);\n    setDosageResult(null);\n\n    try {\n        const response = await getMedicineDosage({\n            medicineName: medicineName,\n            age: data.age,\n            language: effectiveLanguage,\n        });\n        setDosageResult(response);\n        setIsDosageDialogOpen(false);\n        setIsDosageResultOpen(true);\n    } catch(e) {\n        console.error(\"Dosage Error\", e);\n        toast({\n            variant: 'destructive',\n            title: 'Error',\n            description: 'Could not fetch dosage information. Please try again.',\n        });\n    } finally {\n        setIsDosageLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"flex flex-col gap-6\">\n       <div className=\"flex items-center\">\n        <h1 className=\"text-lg font-semibold md:text-2xl font-headline\">{t('medicineChecker')}</h1>\n      </div>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-headline text-2xl\">AI Medicine Checker</CardTitle>\n          <CardDescription>\n            Enter the name of a medicine or scan it with your camera to learn what it's used for.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"grid grid-cols-1 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"medicineName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Medicine Name</FormLabel>\n                    <FormControl>\n                        <div className=\"relative\">\n                            <Pill className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                            <Input \n                                placeholder=\"e.g., Paracetamol\" \n                                {...field} \n                                className=\"pl-10\" \n                                onChange={handleInputChange}\n                                onBlur={() => setTimeout(() => setIsSuggestionsVisible(false), 150)}\n                                autoComplete=\"off\"\n                            />\n                             {isSuggestionsVisible && suggestions.length > 0 && (\n                                <div className=\"absolute z-10 w-full mt-1 bg-background border border-border rounded-md shadow-lg\">\n                                    <ul className=\"py-1\">\n                                    {suggestions.map((medicine, index) => (\n                                        <li\n                                            key={index}\n                                            className=\"px-3 py-2 cursor-pointer hover:bg-accent\"\n                                            onClick={() => handleSuggestionClick(medicine)}\n                                        >\n                                            {medicine}\n                                        </li>\n                                    ))}\n                                    </ul>\n                                </div>\n                            )}\n                        </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n            <div className=\"relative flex items-center justify-center my-4\">\n                <div className=\"absolute inset-0 flex items-center\">\n                    <span className=\"w-full border-t\" />\n                </div>\n                <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-background px-2 text-muted-foreground\">Or</span>\n                </div>\n            </div>\n\n            <div className=\"space-y-4\">\n                 {!isCameraOpen && !capturedImage && (\n                     <Button type=\"button\" variant=\"outline\" className=\"w-full\" onClick={() => setIsCameraOpen(true)}>\n                         <Camera className=\"mr-2\" />\n                         Scan with Camera\n                     </Button>\n                 )}\n\n                {isCameraOpen && (\n                    <div className=\"space-y-4\">\n                        <video ref={videoRef} className=\"w-full aspect-video rounded-md bg-muted\" autoPlay muted playsInline />\n                        {hasCameraPermission === false && (\n                             <Alert variant=\"destructive\">\n                                <AlertTitle>Camera Access Required</AlertTitle>\n                                <AlertDescription>Please allow camera access in your browser settings to use this feature.</AlertDescription>\n                            </Alert>\n                        )}\n                         <div className=\"flex gap-4\">\n                            <Button type=\"button\" className=\"w-full\" onClick={handleCapture} disabled={hasCameraPermission === false}>\n                                <ScanLine className=\"mr-2\" />\n                                Capture\n                            </Button>\n                            <Button type=\"button\" variant=\"ghost\" onClick={() => setIsCameraOpen(false)}>Cancel</Button>\n                        </div>\n                    </div>\n                )}\n                \n                {capturedImage && (\n                    <div className=\"space-y-4 text-center\">\n                         <Image src={capturedImage} alt=\"Captured medicine\" width={400} height={300} className=\"rounded-md mx-auto\" />\n                         <p className=\"text-sm text-muted-foreground\">Image captured. Click \"Get Information\" to analyze.</p>\n                         <Button type=\"button\" variant=\"outline\" onClick={() => { setCapturedImage(null); setResultFromImage(false); form.setValue('medicineName', ''); }}>\n                             Retake or Type\n                         </Button>\n                    </div>\n                )}\n                 <canvas ref={canvasRef} className=\"hidden\" />\n            </div>\n\n              <div className=\"flex flex-wrap gap-2 justify-start mt-4\">\n                <Button type=\"submit\" disabled={loading}>\n                    {loading ? (\n                    <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        Checking...\n                    </>\n                    ) : (\n                    <>\n                        <Sparkles className=\"mr-2 h-4 w-4\" />\n                        Get Information\n                    </>\n                    )}\n                </Button>\n                 <Dialog open={isDosageDialogOpen} onOpenChange={setIsDosageDialogOpen}>\n                    <DialogTrigger asChild>\n                        <Button type=\"button\" variant=\"secondary\" disabled={!form.getValues('medicineName')}>\n                            <HelpCircle className=\"mr-2 h-4 w-4\" />\n                            How to Take\n                        </Button>\n                    </DialogTrigger>\n                    <DialogContent>\n                        <DialogHeader>\n                            <DialogTitle>Enter Age for Dosage</DialogTitle>\n                            <DialogDescription>\n                                Please provide the age of the person who will be taking {form.getValues('medicineName')} to get more accurate instructions.\n                            </DialogDescription>\n                        </DialogHeader>\n                        <Form {...dosageForm}>\n                            <form onSubmit={dosageForm.handleSubmit(onDosageSubmit)} className=\"space-y-4\">\n                                <FormField\n                                    control={dosageForm.control}\n                                    name=\"age\"\n                                    render={({ field }) => (\n                                    <FormItem>\n                                        <FormLabel>Age</FormLabel>\n                                        <FormControl>\n                                            <Input type=\"number\" placeholder=\"Enter age\" {...field} value={field.value ?? ''} />\n                                        </FormControl>\n                                        <FormMessage />\n                                    </FormItem>\n                                    )}\n                                />\n                                <Button type=\"submit\" disabled={isDosageLoading} className=\"w-full\">\n                                    {isDosageLoading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : \"Get Dosage Info\"}\n                                </Button>\n                            </form>\n                        </Form>\n                    </DialogContent>\n                 </Dialog>\n              </div>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n\n      {error && (\n        <Card className=\"border-destructive\">\n          <CardHeader className=\"flex-row gap-4 items-center\">\n            <AlertTriangle className=\"text-destructive\" />\n            <div>\n              <CardTitle className=\"text-destructive\">Error</CardTitle>\n              <CardDescription className=\"text-destructive/80\">{error}</CardDescription>\n            </div>\n          </CardHeader>\n        </Card>\n      )}\n\n      {result && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"font-headline text-xl flex items-center gap-2\">\n                <Info className=\"h-5 w-5 text-primary\" />\n                <span>Medicine Information</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"prose prose-sm dark:prose-invert max-w-none p-4 border rounded-md relative\">\n                <p>{result.usageInfo}</p>\n                {resultFromImage && (\n                    <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"absolute top-2 right-2\"\n                        onClick={() => {\n                            if (isSpeaking) {\n                                stopPlayback();\n                            } else if (result.usageInfo) {\n                                handlePlayback(result.usageInfo);\n                            }\n                        }}\n                        aria-label={isSpeaking ? \"Stop reading\" : \"Read details aloud\"}\n                    >\n                       {isSpeaking ? <StopCircle className=\"h-5 w-5 text-destructive\" /> : <Volume2 className=\"h-5 w-5\" />}\n                    </Button>\n                )}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {dosageResult && (\n        <AlertDialog open={isDosageResultOpen} onOpenChange={setIsDosageResultOpen}>\n            <AlertDialogContent>\n                <AlertDialogHeader>\n                    <AlertDialogTitle>Dosage for {form.getValues('medicineName')}</AlertDialogTitle>\n                    <AlertDialogDescription>\n                       Based on an age of {dosageForm.getValues('age')}.\n                    </AlertDialogDescription>\n                </AlertDialogHeader>\n                <div className=\"space-y-4 text-sm\">\n                    <p><strong>Dosage:</strong> {dosageResult.dosage}</p>\n                    <p><strong>Timing with Food:</strong> {dosageResult.timing}</p>\n                    <p><strong>Time of Day:</strong> {dosageResult.timeOfDay}</p>\n                    <div className=\"p-3 bg-amber-100 dark:bg-amber-900/20 rounded-lg text-amber-800 dark:text-amber-300\">\n                        <p className=\"font-medium\">{dosageResult.disclaimer}</p>\n                    </div>\n                </div>\n                <AlertDialogFooter>\n                    <AlertDialogAction>OK</AlertDialogAction>\n                </AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}