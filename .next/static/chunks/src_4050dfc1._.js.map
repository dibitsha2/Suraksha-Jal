{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10 hover:scale-110\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,yWACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/auth-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useRouter } from 'next/navigation';\nimport {\n  Loader2,\n  Mail,\n  MapPin,\n  User,\n  Lock,\n  Briefcase,\n} from 'lucide-react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\n\n// Schemas\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n});\n\nconst healthWorkerLoginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().optional(),\n});\n\n\nconst userRegisterSchema = z.object({\n  username: z.string().min(2, 'Username is too short'),\n  email: z.string().email('Invalid email address'),\n  address: z.string().min(5, 'Address is too short'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n});\n\nconst healthWorkerRegisterSchema = z.object({\n    username: z.string().min(2, 'Username is too short'),\n    email: z.string().email('Invalid email address'),\n    workerId: z.string().min(1, 'Worker ID is required.'),\n    password: z.string().min(8, 'Password must be at least 8 characters'),\n});\n\n\ntype LoginValues = z.infer<typeof loginSchema>;\ntype HealthWorkerLoginValues = z.infer<typeof healthWorkerLoginSchema>;\ntype UserRegisterValues = z.infer<typeof userRegisterSchema>;\ntype HealthWorkerRegisterValues = z.infer<typeof healthWorkerRegisterSchema>;\n\ntype UserType = 'user' | 'health-worker';\n\n\n// Main Component\nexport default function AuthForm({ initialTab = 'login', userType = 'user' }: { initialTab?: 'login' | 'register', userType: UserType }) {\n  \n  const redirectUrl = userType === 'health-worker' ? '/dashboard-health-worker' : '/dashboard';\n\n  return (\n    <Tabs defaultValue={initialTab} className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-2\">\n        <TabsTrigger value=\"login\">Login</TabsTrigger>\n        <TabsTrigger value=\"register\">Register</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"login\">\n        {userType === 'user' ? (\n          <LoginForm redirectUrl={redirectUrl} />\n        ) : (\n          <HealthWorkerLoginForm redirectUrl={redirectUrl} userType={userType} />\n        )}\n      </TabsContent>\n      <TabsContent value=\"register\">\n        {userType === 'user' ? (\n            <UserRegisterForm redirectUrl={redirectUrl} />\n        ) : (\n            <HealthWorkerRegisterForm redirectUrl={redirectUrl} />\n        )}\n      </TabsContent>\n    </Tabs>\n  );\n}\n\n// Login Form Component\nfunction LoginForm({ redirectUrl }: { redirectUrl: string }) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(false);\n\n  const form = useForm<LoginValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: { email: '', password: '' },\n  });\n\n  const onSubmit: SubmitHandler<LoginValues> = async (data) => {\n    setLoading(true);\n    try {\n        const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n        const existingProfile = allProfiles[data.email];\n\n        if (!existingProfile) {\n             toast({\n                variant: 'destructive',\n                title: 'Login Failed',\n                description: 'This email is not registered. Please create an account.',\n             });\n             setLoading(false);\n             return;\n        }\n\n        if (existingProfile.role === 'health-worker') {\n            toast({\n                variant: 'destructive',\n                title: 'Access Denied',\n                description: 'This is a health worker account. Please use the health worker portal.',\n            });\n            setLoading(false);\n            return;\n        }\n\n        // In a real app, you'd verify the password here. For this demo, we skip it.\n        // We will just check if the stored profile has the same password.\n        if (existingProfile.password !== data.password) {\n          // This check is disabled in the original logic, so we will keep it simple.\n          // For a real app, you'd use Firebase Auth to verify.\n        }\n\n        const updatedProfile = {\n            ...existingProfile,\n            name: existingProfile.name || data.email.split('@')[0],\n            email: data.email,\n        };\n\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n        \n        toast({\n          title: 'Login Successful',\n          description: 'Redirecting...',\n        });\n\n        router.push(redirectUrl);\n\n    } catch (error: any) {\n        console.error('Login error:', error);\n        toast({\n            variant: 'destructive',\n            title: 'Login Failed',\n            description: 'An unexpected error occurred.',\n        });\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"border-t-0 rounded-t-none\">\n      <CardHeader>\n        <CardTitle>Welcome Back</CardTitle>\n        <CardDescription>Enter your credentials to access your account.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                       <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input type=\"password\" placeholder=\"••••••••\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Sign In\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction HealthWorkerLoginForm({ redirectUrl, userType }: { redirectUrl: string, userType: UserType }) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(false);\n\n  const form = useForm<HealthWorkerLoginValues>({\n    resolver: zodResolver(healthWorkerLoginSchema),\n    defaultValues: { email: '', password: '' },\n  });\n\n  const onSubmit: SubmitHandler<HealthWorkerLoginValues> = async (data) => {\n    setLoading(true);\n    try {\n        // Simplified login for demo\n        const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n        let existingProfile = allProfiles[data.email];\n\n        if (!existingProfile) {\n            // For demo purposes, create a profile if it doesn't exist for a health worker\n            existingProfile = {\n                name: data.email.split('@')[0],\n                email: data.email,\n                role: userType,\n            };\n        }\n        \n        if (existingProfile?.role !== 'health-worker') {\n            toast({\n                variant: 'destructive',\n                title: 'Access Denied',\n                description: 'This account is not registered as a health worker. Please use the general user portal.',\n            });\n            setLoading(false);\n            return;\n        }\n        \n        const updatedProfile = {\n            ...existingProfile,\n            name: existingProfile.name || data.email.split('@')[0],\n            email: data.email,\n        };\n\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n        allProfiles[data.email] = updatedProfile;\n        localStorage.setItem('userProfiles', JSON.stringify(allProfiles));\n\n\n        toast({\n          title: 'Login Successful',\n          description: 'Redirecting...',\n        });\n\n        router.push(redirectUrl);\n\n    } catch (error: any) {\n        console.error('Login error:', error);\n        toast({\n            variant: 'destructive',\n            title: 'Login Failed',\n            description: 'An unexpected error occurred.',\n        });\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"border-t-0 rounded-t-none\">\n      <CardHeader>\n        <CardTitle>Welcome Back</CardTitle>\n        <CardDescription>Enter your email to access the health worker portal.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Sign In\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n\n\nfunction UserRegisterForm({ redirectUrl }: { redirectUrl: string }) {\n    const router = useRouter();\n    const { toast } = useToast();\n    const form = useForm<UserRegisterValues>({\n        resolver: zodResolver(userRegisterSchema),\n        defaultValues: { username: '', email: '', address: '', password: '' },\n    });\n\n    const onSubmit: SubmitHandler<UserRegisterValues> = async (data) => {\n        try {\n            const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n            if (allProfiles[data.email]) {\n                toast({\n                    variant: 'destructive',\n                    title: 'Registration Failed',\n                    description: 'This email is already registered. Please log in.',\n                });\n                return;\n            }\n\n            const profile = {\n                name: data.username,\n                email: data.email,\n                address: data.address,\n                password: data.password, // Storing password in localStorage is not secure, for demo only\n                role: 'user',\n            };\n            \n            allProfiles[data.email] = profile;\n            localStorage.setItem('userProfiles', JSON.stringify(allProfiles));\n            \n            localStorage.setItem('userProfile', JSON.stringify(profile));\n            toast({\n                title: 'Registration Successful',\n                description: \"You have been logged in automatically.\",\n            });\n            router.push(redirectUrl);\n\n        } catch (error: any) {\n            console.error('Registration error:', error);\n            let description = 'An unexpected error occurred.';\n             toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description,\n            });\n        }\n    };\n\n    return (\n        <Card className=\"border-t-0 rounded-t-none\">\n            <CardHeader>\n                <CardTitle>Create an Account</CardTitle>\n                <CardDescription>Join our community to stay informed.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        <FormField control={form.control} name=\"username\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Username</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"your_username\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"email\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Email</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                         <FormField control={form.control} name=\"address\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Address</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"Your city, state\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"password\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Password</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input type=\"password\" placeholder=\"Choose a strong password\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting}>\n                            {form.formState.isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Create Account\n                        </Button>\n                    </form>\n                </Form>\n            </CardContent>\n        </Card>\n    );\n}\n\nfunction HealthWorkerRegisterForm({ redirectUrl }: { redirectUrl: string }) {\n    const router = useRouter();\n    const { toast } = useToast();\n    const form = useForm<HealthWorkerRegisterValues>({\n        resolver: zodResolver(healthWorkerRegisterSchema),\n        defaultValues: { username: '', email: '', workerId: '', password: '' },\n    });\n\n    const onSubmit: SubmitHandler<HealthWorkerRegisterValues> = async (data) => {\n        try {\n            const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n            if (allProfiles[data.email]) {\n                toast({\n                    variant: 'destructive',\n                    title: 'Registration Failed',\n                    description: 'This email is already registered. Please log in.',\n                });\n                return;\n            }\n\n            const profile = {\n                name: data.username,\n                email: data.email,\n                workerId: data.workerId,\n                role: 'health-worker', // Assign role\n            };\n            \n            allProfiles[data.email] = profile;\n            localStorage.setItem('userProfiles', JSON.stringify(allProfiles));\n            \n            toast({\n                title: 'Registration Successful',\n                description: \"Please log in to continue.\",\n            });\n            router.push('/health-worker/login');\n\n        } catch (error: any) {\n            console.error('Registration error:', error);\n            let description = 'An unexpected error occurred.';\n             toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description,\n            });\n        }\n    };\n\n    return (\n        <Card className=\"border-t-0 rounded-t-none\">\n            <CardHeader>\n                <CardTitle>Health Worker Registration</CardTitle>\n                <CardDescription>Create a professional account to submit reports.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        <FormField control={form.control} name=\"username\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Full Name</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"Your full name\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"email\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Official Email</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"your.official@email.gov\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                         <FormField control={form.control} name=\"workerId\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Health Worker ID</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Briefcase className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"Your official ID number\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"password\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Password</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input type=\"password\" placeholder=\"Choose a strong password\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting}>\n                            {form.formState.isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Create Account\n                        </Button>\n                    </form>\n                </Form>\n            </CardContent>\n        </Card>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1887, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function SurakshaJalLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <path d=\"M12 22a7 7 0 0 0 7-7c0-2-1-3.9-3-5.5s-3.5-4-3.5-6V2\" />\n      <path d=\"M12 22a7 7 0 0 1-7-7c0-2 1-3.9 3-5.5s3.5-4 3.5-6V2\" />\n      <path d=\"M16 12h2\" />\n      <path d=\"M6 12H4\" />\n      <path d=\"m14.5 16.5-1-1\" />\n      <path d=\"m9.5 16.5 1-1\" />\n      <path d=\"M12 20v-4\" />\n      <path d=\"M12 6V2\" />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEO,SAAS,gBAAgB,KAA8B;IAC5D,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,MAAK;QACL,QAAO;QACP,aAAY;QACZ,eAAc;QACd,gBAAe;QACd,GAAG,KAAK;;0BAET,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;0BACR,6LAAC;gBAAK,GAAE;;;;;;;;;;;;AAGd;KAtBgB","debugId":null}},
    {"offset": {"line": 1978, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/health-worker/login/page.tsx"],"sourcesContent":["\n'use client';\nimport Link from 'next/link';\nimport AuthForm from '@/components/auth/auth-form';\nimport { SurakshaJalLogo } from '@/components/icons';\nimport { Button } from '@/components/ui/button';\nimport { Separator } from '@/components/ui/separator';\nimport { User, Share2 } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function HealthWorkerLoginPage() {\n  const { toast } = useToast();\n\n  const handleShare = () => {\n    navigator.clipboard.writeText(window.location.href).then(() => {\n      toast({\n        title: 'Link Copied!',\n        description: 'The page URL has been copied to your clipboard.',\n      });\n    }).catch(err => {\n      console.error('Failed to copy: ', err);\n      toast({\n        variant: 'destructive',\n        title: 'Failed to Copy',\n        description: 'Could not copy the link. Please try again.',\n      });\n    });\n  };\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col items-center justify-center bg-background p-4\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"mb-8 flex flex-col items-center gap-4 text-center\">\n          <SurakshaJalLogo className=\"w-20 h-20 text-primary\" />\n          <h1 className=\"text-3xl font-bold text-primary font-headline\">Health Worker Portal</h1>\n          <p className=\"text-muted-foreground\">\n            Official login for health and community workers.\n          </p>\n        </div>\n        <AuthForm initialTab=\"login\" userType=\"health-worker\" />\n\n        <div className=\"mt-4 flex justify-end\">\n            <Button variant=\"ghost\" size=\"sm\" onClick={handleShare}>\n                <Share2 className=\"mr-2 h-4 w-4\" />\n                Share\n            </Button>\n        </div>\n\n        <Separator className=\"my-6\" />\n\n        <div className=\"text-center\">\n            <p className=\"mb-4 text-muted-foreground\">Not a health worker?</p>\n            <Button asChild variant=\"outline\">\n                <Link href=\"/auth/login\">\n                    <User className=\"mr-2 h-4 w-4\" />\n                    Go to User Portal\n                </Link>\n            </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAPA;;;;;;;;AASe,SAAS;;IACtB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,cAAc;QAClB,UAAU,SAAS,CAAC,SAAS,CAAC,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;YACvD,MAAM;gBACJ,OAAO;gBACP,aAAa;YACf;QACF,GAAG,KAAK,CAAC,CAAA;YACP,QAAQ,KAAK,CAAC,oBAAoB;YAClC,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,8HAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;sCAC3B,6LAAC;4BAAG,WAAU;sCAAgD;;;;;;sCAC9D,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;8BAIvC,6LAAC,6IAAA,CAAA,UAAQ;oBAAC,YAAW;oBAAQ,UAAS;;;;;;8BAEtC,6LAAC;oBAAI,WAAU;8BACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,SAAS;;0CACvC,6LAAC,6MAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;8BAK3C,6LAAC,wIAAA,CAAA,YAAS;oBAAC,WAAU;;;;;;8BAErB,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAC1C,6LAAC,qIAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,SAAQ;sCACpB,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACP,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrD;GApDwB;;QACJ,+HAAA,CAAA,WAAQ;;;KADJ","debugId":null}}]
}