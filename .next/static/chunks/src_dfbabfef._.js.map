{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card/80 text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/symptom-based-disease-checker.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview A symptom-based disease checker AI agent.\n *\n * - symptomBasedDiseaseChecker - A function that handles the disease checking process based on symptoms.\n * - SymptomBasedDiseaseCheckerInput - The input type for the symptomBasedDiseaseChecker function.\n * - SymptomBasedDiseaseCheckerOutput - The return type for the symptomBasedDiseaseChecker function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SymptomBasedDiseaseCheckerInputSchema = z.object({\n  symptoms: z\n    .string()\n    .describe(\"A description of the symptoms the user is experiencing.\"),\n  location: z\n    .string()\n    .optional()\n    .describe(\"The user's current location, if available.\"),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type SymptomBasedDiseaseCheckerInput = z.infer<typeof SymptomBasedDiseaseCheckerInputSchema>;\n\nconst SymptomBasedDiseaseCheckerOutputSchema = z.object({\n  diseaseMatches: z.array(z.string()).describe(\"A list of potential waterborne diseases that match the provided symptoms.\"),\n  preventiveMeasures: z.array(z.string()).describe(\"A list of preventive measures the user can take based on the potential diseases.\"),\n  additionalInformation: z.array(z.string()).describe(\"A list of additional information points about the potential diseases and related health advice.\"),\n  suggestedMedicines: z.array(z.string()).describe(\"A list of common over-the-counter medicines that might help alleviate symptoms. This is not a prescription.\"),\n});\nexport type SymptomBasedDiseaseCheckerOutput = z.infer<typeof SymptomBasedDiseaseCheckerOutputSchema>;\n\nexport async function symptomBasedDiseaseChecker(input: SymptomBasedDiseaseCheckerInput): Promise<SymptomBasedDiseaseCheckerOutput> {\n  return symptomBasedDiseaseCheckerFlow(input);\n}\n\nconst symptomBasedDiseaseCheckerPrompt = ai.definePrompt({\n  name: 'symptomBasedDiseaseCheckerPrompt',\n  input: {schema: SymptomBasedDiseaseCheckerInputSchema},\n  output: {schema: SymptomBasedDiseaseCheckerOutputSchema},\n  prompt: `You are a medical assistant specializing in waterborne diseases. Based on the symptoms provided by the user, you will identify potential matching diseases. \n  \nAlso provide a list of preventive measures, a list of additional information points, and suggest some common over-the-counter medicines that may help with the symptoms, but strongly advise consulting a doctor.\n\nSymptoms: {{{symptoms}}}\nLocation (if available): {{{location}}}\n\n{{#if language}}\nThe user's preferred language is {{language}}. Respond in that language.\n{{/if}}\n`,\n});\n\nconst symptomBasedDiseaseCheckerFlow = ai.defineFlow(\n  {\n    name: 'symptomBasedDiseaseCheckerFlow',\n    inputSchema: SymptomBasedDiseaseCheckerInputSchema,\n    outputSchema: SymptomBasedDiseaseCheckerOutputSchema,\n  },\n  async input => {\n    const {output} = await symptomBasedDiseaseCheckerPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAgCsB,6BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ai-powered-disease-information.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides AI-powered information about waterborne diseases.\n *\n * - getDiseaseInformation - A function to retrieve detailed information about a specific disease.\n * - DiseaseInformationInput - The input type for the getDiseaseInformation function.\n * - DiseaseInformationOutput - The return type for the getDiseaseInformation function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst DiseaseInformationInputSchema = z.object({\n  diseaseName: z.string().describe('The name of the waterborne disease to get information about.'),\n  symptoms: z.string().describe('A comma separated list of symptoms the user is experiencing.'),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type DiseaseInformationInput = z.infer<typeof DiseaseInformationInputSchema>;\n\nconst DiseaseInformationOutputSchema = z.object({\n  diseaseInfo: z.string().describe('Detailed information about the waterborne disease, including causes, prevention, and treatment.'),\n});\nexport type DiseaseInformationOutput = z.infer<typeof DiseaseInformationOutputSchema>;\n\nexport async function getDiseaseInformation(input: DiseaseInformationInput): Promise<DiseaseInformationOutput> {\n  return diseaseInformationFlow(input);\n}\n\nconst diseaseInformationPrompt = ai.definePrompt({\n  name: 'diseaseInformationPrompt',\n  input: {schema: DiseaseInformationInputSchema},\n  output: {schema: DiseaseInformationOutputSchema},\n  prompt: `You are a medical expert specializing in waterborne diseases. A user is experiencing some symptoms and you have diagnosed a potential waterborne disease. Provide detailed information about the disease, including its causes, and how to prevent it. Also provide treatment information.\n\nDisease Name: {{{diseaseName}}}\nUser Symptoms: {{{symptoms}}}\n\n{{#if language}}\nThe user's preferred language is {{language}}. Respond in that language.\n{{/if}}\n`,\n});\n\nconst diseaseInformationFlow = ai.defineFlow(\n  {\n    name: 'diseaseInformationFlow',\n    inputSchema: DiseaseInformationInputSchema,\n    outputSchema: DiseaseInformationOutputSchema,\n  },\n  async input => {\n    const {output} = await diseaseInformationPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAyBsB,wBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/speech-to-text.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Transcribes audio to text.\n *\n * - speechToText - A function to transcribe audio.\n * - SpeechToTextInput - The input type for the speechToToxtext function.\n * - SpeechToTextOutput - The return type for the speechToText function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport { z } from 'genkit';\n\nconst SpeechToTextInputSchema = z.object({\n  audioDataUri: z\n    .string()\n    .describe(\n      \"The audio to transcribe, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n  language: z.string().describe('The language of the audio.').optional(),\n});\nexport type SpeechToTextInput = z.infer<typeof SpeechToTextInputSchema>;\n\nconst SpeechToTextOutputSchema = z.object({\n  transcription: z.string().describe('The transcribed text.'),\n});\nexport type SpeechToTextOutput = z.infer<typeof SpeechToTextOutputSchema>;\n\nexport async function speechToText(input: SpeechToTextInput): Promise<SpeechToTextOutput> {\n  return speechToTextFlow(input);\n}\n\nconst speechToTextFlow = ai.defineFlow(\n  {\n    name: 'speechToTextFlow',\n    inputSchema: SpeechToTextInputSchema,\n    outputSchema: SpeechToTextOutputSchema,\n  },\n  async (input) => {\n    const { text } = await ai.generate({\n      model: googleAI.model('gemini-1.5-flash-latest'),\n      prompt: [\n        {\n          media: {\n            url: input.audioDataUri,\n          },\n        },\n        {\n          text: `Transcribe the audio. The user is speaking in ${input.language || 'the auto-detected language'}.`,\n        }\n      ],\n    });\n    \n    return { transcription: text };\n  }\n);\n"],"names":[],"mappings":";;;;;;IA8BsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Converts text to speech.\n *\n * - textToSpeech - A function to convert text to speech.\n * - TextToSpeechInput - The input type for the textToSpeech function.\n * - TextToSpeechOutput - The return type for the textToSpeech function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport { z } from 'genkit';\nimport wav from 'wav';\n\nconst TextToSpeechInputSchema = z.object({\n  text: z.string().describe('The text to convert to speech.'),\n});\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\n\nconst TextToSpeechOutputSchema = z.object({\n  audioDataUri: z\n    .string()\n    .describe(\n      \"The speech audio, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:audio/wav;base64,<encoded_data>'.\"\n    ),\n});\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\n\nexport async function textToSpeech(input: TextToSpeechInput): Promise<TextToSpeechOutput> {\n  return textToSpeechFlow(input);\n}\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    let bufs = [] as any[];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: TextToSpeechInputSchema,\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async (input) => {\n    const { media } = await ai.generate({\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: { voiceName: 'Algenib' },\n          },\n        },\n      },\n      prompt: input.text,\n    });\n\n    if (!media) {\n      throw new Error('No media returned from TTS model.');\n    }\n\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n\n    const wavBase64 = await toWav(audioBuffer);\n\n    return {\n      audioDataUri: `data:audio/wav;base64,${wavBase64}`,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;;IA6BsB,eAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/symptom-checker/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Loader2, Sparkles, AlertTriangle, Pill, Mic, Square, Volume2, ShieldCheck, Info } from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport {\n  symptomBasedDiseaseChecker,\n  type SymptomBasedDiseaseCheckerOutput,\n} from '@/ai/flows/symptom-based-disease-checker';\nimport { getDiseaseInformation, type DiseaseInformationOutput } from '@/ai/flows/ai-powered-disease-information';\nimport { useLanguage } from '@/hooks/use-language';\nimport { speechToText } from '@/ai/flows/speech-to-text';\nimport { textToSpeech } from '@/ai/flows/text-to-speech';\nimport { useToast } from '@/hooks/use-toast';\n\nconst symptomSchema = z.object({\n  symptoms: z.string().min(10, 'Please describe your symptoms in more detail.'),\n});\n\ntype SymptomValues = z.infer<typeof symptomSchema>;\n\ntype DetailedInfoState = {\n    [key: string]: {\n        loading: boolean;\n        data: DiseaseInformationOutput | null;\n    }\n}\n\nexport default function SymptomCheckerPage() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [result, setResult] = useState<SymptomBasedDiseaseCheckerOutput | null>(null);\n  const [detailedInfo, setDetailedInfo] = useState<DetailedInfoState>({});\n  const { effectiveLanguage } = useLanguage();\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n  const { toast } = useToast();\n  const [isSpeaking, setIsSpeaking] = useState<Record<string, boolean>>({});\n\n  const form = useForm<SymptomValues>({\n    resolver: zodResolver(symptomSchema),\n    defaultValues: { symptoms: '' },\n  });\n\n  const handleStartRecording = async () => {\n    form.setValue('symptoms', '');\n    setIsRecording(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      audioChunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.start();\n    } catch (err) {\n      console.error(\"Error accessing microphone:\", err);\n      toast({ variant: 'destructive', title: 'Microphone Error', description: 'Could not access the microphone. Please check your browser permissions.'});\n      setIsRecording(false);\n    }\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\n        const reader = new FileReader();\n        reader.readAsDataURL(audioBlob);\n        reader.onloadend = async () => {\n          const base64Audio = reader.result as string;\n          setLoading(true);\n          try {\n            const { transcription } = await speechToText({ audioDataUri: base64Audio, language: effectiveLanguage });\n            const currentSymptoms = form.getValues('symptoms');\n            form.setValue('symptoms', currentSymptoms ? `${currentSymptoms} ${transcription}` : transcription);\n          } catch (e) {\n            console.error(e);\n            toast({ variant: 'destructive', title: 'Transcription Error', description: 'Could not transcribe audio. Please try again.'});\n          } finally {\n            setLoading(false);\n          }\n        };\n         // Stop media tracks after stopping recording\n        if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n            mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        }\n      };\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const handlePlayback = async (id: string, text: string) => {\n      setIsSpeaking(prev => ({ ...prev, [id]: true }));\n      try {\n        const { audioDataUri } = await textToSpeech({ text });\n        const audio = new Audio(audioDataUri);\n        audio.play();\n        audio.onended = () => setIsSpeaking(prev => ({ ...prev, [id]: false }));\n      } catch (e) {\n        console.error(e);\n        toast({ variant: 'destructive', title: 'Playback Error', description: 'Could not play the audio response.'});\n        setIsSpeaking(prev => ({ ...prev, [id]: false }));\n      }\n  }\n\n\n  const onSubmit: SubmitHandler<SymptomValues> = async (data) => {\n    setLoading(true);\n    setError(null);\n    setResult(null);\n    setDetailedInfo({});\n\n    try {\n      const response = await symptomBasedDiseaseChecker({\n        symptoms: data.symptoms,\n        location: 'Mumbai, India',\n        language: effectiveLanguage,\n      });\n      setResult(response);\n    } catch (e) {\n      console.error(e);\n      setError('An error occurred while checking symptoms. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const fetchDetailedInfo = async (diseaseName: string, symptoms: string) => {\n    setDetailedInfo(prev => ({ ...prev, [diseaseName]: { loading: true, data: null }}));\n    try {\n        const response = await getDiseaseInformation({ diseaseName, symptoms, language: effectiveLanguage });\n        setDetailedInfo(prev => ({ ...prev, [diseaseName]: { loading: false, data: response }}));\n    } catch (e) {\n        console.error(e);\n        setDetailedInfo(prev => ({ ...prev, [diseaseName]: { loading: false, data: { diseaseInfo: 'Could not fetch detailed information.'}}}));\n    }\n  }\n  \n  useEffect(() => {\n    return () => {\n      // Ensure media stream is stopped on component unmount\n      if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"flex flex-col gap-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"font-headline text-2xl\">AI Symptom Checker</CardTitle>\n          <CardDescription>\n            Describe your symptoms by typing or using your voice. Our AI will provide potential waterborne disease matches and advice.\n            This is not a substitute for professional medical advice.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"symptoms\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Your Symptoms</FormLabel>\n                    <FormControl>\n                      <div className=\"relative\">\n                        <Textarea\n                          placeholder=\"e.g., I have a high fever, headache, and stomach pain...\"\n                          className=\"min-h-[120px] pr-12\"\n                          {...field}\n                        />\n                        <div className=\"absolute top-3 right-3\">\n                          <Button \n                            type=\"button\" \n                            variant={isRecording ? 'destructive' : 'ghost'} \n                            size=\"icon\" \n                            onClick={isRecording ? handleStopRecording : handleStartRecording}\n                            aria-label={isRecording ? 'Stop recording' : 'Start recording'}\n                          >\n                            {isRecording ? <Square className=\"h-5 w-5\" /> : <Mic className=\"h-5 w-5\" />}\n                          </Button>\n                        </div>\n                      </div>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" disabled={loading || isRecording}>\n                {loading ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Analyzing...\n                  </>\n                ) : (\n                  <>\n                    <Sparkles className=\"mr-2 h-4 w-4\" />\n                    Check Disease\n                  </>\n                )}\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n\n      {error && (\n        <Card className=\"border-destructive\">\n          <CardHeader className=\"flex-row gap-4 items-center\">\n            <AlertTriangle className=\"text-destructive\" />\n            <div>\n              <CardTitle className=\"text-destructive\">Error</CardTitle>\n              <CardDescription className=\"text-destructive/80\">{error}</CardDescription>\n            </div>\n          </CardHeader>\n        </Card>\n      )}\n\n      {result && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"font-headline text-xl\">Analysis Results</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div>\n              <h3 className=\"font-semibold mb-2\">Potential Disease Matches</h3>\n              <p className=\"text-sm text-muted-foreground\">Based on your symptoms, here are some possibilities. Click on each for more information.</p>\n                <Accordion type=\"single\" collapsible className=\"w-full mt-4\">\n                  {result.diseaseMatches.map((disease, index) => (\n                    <AccordionItem value={`item-${index}`} key={index}>\n                      <AccordionTrigger>{disease}</AccordionTrigger>\n                      <AccordionContent className=\"space-y-4\">\n                        <p className=\"text-sm text-muted-foreground\">Click the button below to get AI-powered details about this disease.</p>\n                         <Button variant=\"outline\" size=\"sm\" onClick={() => fetchDetailedInfo(disease, form.getValues('symptoms'))} disabled={detailedInfo[disease]?.loading}>\n                            {detailedInfo[disease]?.loading ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Sparkles className=\"mr-2 h-4 w-4\" />}\n                            Get More Information\n                        </Button>\n                        {detailedInfo[disease]?.data && (\n                            <div className=\"prose prose-sm dark:prose-invert mt-4 p-4 border rounded-md relative\">\n                                <p>{detailedInfo[disease]?.data?.diseaseInfo}</p>\n                                <Button\n                                  variant=\"ghost\"\n                                  size=\"icon\"\n                                  className=\"absolute top-2 right-2\"\n                                  onClick={() => handlePlayback(`detail-${index}`, detailedInfo[disease]!.data!.diseaseInfo)}\n                                  disabled={isSpeaking[`detail-${index}`]}\n                                  aria-label=\"Read details aloud\"\n                                >\n                                    {isSpeaking[`detail-${index}`] ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Volume2 className=\"h-4 w-4\" />}\n                                </Button>\n                            </div>\n                        )}\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n            </div>\n\n            <div className=\"grid md:grid-cols-2 gap-6\">\n                {result.suggestedMedicines && result.suggestedMedicines.length > 0 && (\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className=\"text-lg flex items-center gap-2\">\n                                <Pill className=\"h-5 w-5 text-primary\" />\n                                Suggested Medicines\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                             <ul className=\"space-y-3\">\n                                {result.suggestedMedicines.map((medicine, index) => (\n                                    <li key={index} className=\"flex items-start text-sm text-muted-foreground\">\n                                        <Pill className=\"h-4 w-4 text-primary mr-3 mt-1 flex-shrink-0\" />\n                                        <span>{medicine}</span>\n                                    </li>\n                                ))}\n                            </ul>\n                             <p className=\"text-xs text-amber-800 dark:text-amber-300 mt-4 p-2 bg-amber-100 dark:bg-amber-900/20 rounded-md\"><strong>Important:</strong> Always consult a doctor before taking any new medication. These are only common suggestions and not a prescription.</p>\n                        </CardContent>\n                    </Card>\n                )}\n\n                {result.preventiveMeasures && result.preventiveMeasures.length > 0 && (\n                    <Card>\n                         <CardHeader>\n                            <CardTitle className=\"text-lg flex items-center justify-between\">\n                                <span className=\"flex items-center gap-2\">\n                                    <ShieldCheck className=\"h-5 w-5 text-primary\" />\n                                    Preventive Measures\n                                </span>\n                                <Button\n                                    variant=\"ghost\" size=\"icon\"\n                                    onClick={() => handlePlayback('preventive', result.preventiveMeasures.join('. '))}\n                                    disabled={isSpeaking['preventive']}\n                                    aria-label=\"Read preventive measures aloud\"\n                                >\n                                    {isSpeaking['preventive'] ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Volume2 className=\"h-4 w-4\" />}\n                                </Button>\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                             <ul className=\"space-y-3\">\n                                {result.preventiveMeasures.map((measure, index) => (\n                                    <li key={index} className=\"flex items-start text-sm text-muted-foreground\">\n                                         <ShieldCheck className=\"h-4 w-4 text-primary mr-3 mt-1 flex-shrink-0\" />\n                                         <span>{measure}</span>\n                                    </li>\n                                ))}\n                            </ul>\n                        </CardContent>\n                    </Card>\n                )}\n            </div>\n\n            {result.additionalInformation && result.additionalInformation.length > 0 && (\n                 <Card>\n                     <CardHeader>\n                        <CardTitle className=\"text-lg flex items-center justify-between\">\n                             <span className=\"flex items-center gap-2\">\n                                <Info className=\"h-5 w-5 text-primary\" />\n                                Additional Information\n                            </span>\n                             <Button\n                                variant=\"ghost\" size=\"icon\"\n                                onClick={() => handlePlayback('additional', result.additionalInformation.join('. '))}\n                                disabled={isSpeaking['additional']}\n                                aria-label=\"Read additional information aloud\"\n                            >\n                                {isSpeaking['additional'] ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Volume2 className=\"h-4 w-4\" />}\n                            </Button>\n                        </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <ul className=\"space-y-3\">\n                            {result.additionalInformation.map((info, index) => (\n                                <li key={index} className=\"flex items-start text-sm text-muted-foreground\">\n                                    <Info className=\"h-4 w-4 text-primary mr-3 mt-1 flex-shrink-0\" />\n                                    <span>{info}</span>\n                                </li>\n                            ))}\n                        </ul>\n                    </CardContent>\n                </Card>\n            )}\n            \n            <div className=\"p-4 bg-amber-100 dark:bg-amber-900/20 rounded-lg text-amber-800 dark:text-amber-300 flex items-start gap-4\">\n                <AlertTriangle className=\"h-6 w-6 mt-0.5 flex-shrink-0\" />\n                <div>\n                    <h4 className=\"font-bold\">Disclaimer</h4>\n                    <p className=\"text-sm\">This tool is for informational purposes only and does not constitute medical advice. Please consult a healthcare professional for an accurate diagnosis and treatment plan.</p>\n                </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\n    \n\n    "],"names":[],"mappings":"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","debugId":null}}]
}