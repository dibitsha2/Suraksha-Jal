{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/theme-provider.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as NextThemesProvider } from 'next-themes';\nimport type { ThemeProviderProps } from 'next-themes/dist/types';\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAMO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,8OAAC,gJAAA,CAAA,gBAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/translations.ts"],"sourcesContent":["\n\nexport const languages = [\n  { code: 'en', name: 'English' },\n  { code: 'hi', name: 'हिन्दी (Hindi)' },\n  { code: 'as', name: 'অসমীয়া (Assamese)' },\n  { code: 'bn', name: 'বাংলা (Bengali)' },\n  { code: 'brx', name: 'बोड़ो (Bodo)' },\n  { code: 'doi', name: 'डोगरी (Dogri)' },\n  { code: 'gu', name: 'ગુજરાતી (Gujarati)' },\n  { code: 'kn', name: 'ಕನ್ನಡ (Kannada)' },\n  { code: 'ks', name: 'कश्मीरी (Kashmiri)' },\n  { code: 'kok', name: 'कोंकणी (Konkani)' },\n  { code: 'mai', name: 'मैथिली (Maithili)' },\n  { code: 'ml', name: 'മലയാളം (Malayalam)' },\n  { code: 'mni', name: 'মৈতৈলোন্ (Manipuri)' },\n  { code: 'mr', name: 'मराठी (Marathi)' },\n  { code: 'ne', name: 'नेपाली (Nepali)' },\n  { code: 'or', name: 'ଓଡ଼ିଆ (Odia)' },\n  { code: 'pa', name: 'ਪੰਜਾਬੀ (Punjabi)' },\n  { code: 'sa', name: 'संस्कृतम् (Sanskrit)' },\n  { code: 'sat', name: 'ᱥᱟᱱᱛᱟᱲᱤ (Santali)' },\n  { code: 'sd', name: 'सिन्धी (Sindhi)' },\n  { code: 'ta', name: 'தமிழ் (Tamil)' },\n  { code: 'te', name: 'తెలుగు (Telugu)' },\n  { code: 'ur', name: 'اردو (Urdu)' },\n];\n\nconst generateTranslations = () => {\n    const translations: any = {};\n    const englishFallbacks = {\n        dashboard: 'Dashboard',\n        symptomChecker: 'Symptom Checker',\n        reports: 'Local Reports',\n        profile: 'Profile',\n        languageSettings: 'Language Settings',\n        logout: 'Logout',\n        welcome: 'Welcome',\n        checkSymptomsPrompt: 'Feeling unwell? Check your symptoms now.',\n        getStarted: 'Get Started',\n        casesLast30Days: 'Cases in last 30 days',\n        precautions: 'Precautions',\n        medicationSuggester: 'Medication Suggester',\n        healthReminders: 'Health Reminders',\n        reminders: 'Reminders',\n        medicineChecker: 'Medicine Checker',\n        waterQuality: 'Water Quality',\n        aiChat: 'AI Chat',\n        emergencyContacts: 'Emergency Contacts',\n        viewReports: 'View Reports',\n    };\n\n    for (const lang of languages) {\n        translations[lang.code] = { ...englishFallbacks };\n    }\n    \n    // Add specific known translations\n    translations.hi = {\n        dashboard: 'डैशबोर्ड',\n        symptomChecker: 'लक्षण परीक्षक',\n        reports: 'स्थानीय रिपोर्ट',\n        profile: 'प्रोफ़ाइल',\n        languageSettings: 'भाषा सेटिंग्स',\n        logout: 'लॉग आउट',\n        welcome: 'स्वागत है',\n        checkSymptomsPrompt: 'अस्वस्थ महसूस कर रहे हैं? अभी अपने लक्षणों की जाँच करें।',\n        getStarted: 'शुरू हो जाओ',\n        casesLast30Days: 'पिछले 30 दिनों में मामले',\n        precautions: 'सावधानियां',\n        medicationSuggester: 'दवाइयाँ सुझाएँ',\n        healthReminders: 'स्वास्थ्य अनुस्मारक',\n        reminders: 'अनुस्मारक',\n        medicineChecker: 'दवा परीक्षक',\n        waterQuality: 'पानी की गुणवत्ता',\n        aiChat: 'एआई चैट',\n        emergencyContacts: 'आपातकालीन संपर्क',\n        viewReports: 'रिपोर्ट देखें',\n    };\n    translations.bn = {\n        dashboard: 'ড্যাশবোর্ড',\n        symptomChecker: 'লক্ষণ পরীক্ষক',\n        reports: 'স্থানীয় প্রতিবেদন',\n        profile: 'প্রোফাইল',\n        languageSettings: 'ভাষা সেটিংস',\n        logout: 'লগ আউট',\n        welcome: 'স্বাগতম',\n        checkSymptomsPrompt: 'অসুস্থ বোধ করছেন? এখনই আপনার লক্ষণগুলি পরীক্ষা করুন।',\n        getStarted: 'এবার শুরু করা যাক',\n        casesLast30Days: 'গত ৩০ দিনে কেস',\n        precautions: 'সতর্কতা',\n        medicationSuggester: 'ঔষধের পরামর্শ',\n        healthReminders: 'স্বাস্থ্য অনুস্মারক',\n        reminders: 'অনুস্মারক',\n        medicineChecker: 'ঔষধ পরীক্ষক',\n        waterQuality: 'জলর গুণগত মান',\n        aiChat: 'এআই চ্যাট',\n        emergencyContacts: 'জরুরী যোগাযোগ',\n        viewReports: 'রিপোর্ট দেখুন',\n    };\n    translations.as = {\n        dashboard: 'ডেশ্বৰ্ড',\n        symptomChecker: 'ৰোগৰ লক্ষণ পৰীক্ষক',\n        reports: 'স্থানীয় প্ৰতিবেদন',\n        profile: 'প্ৰফাইল',\n        languageSettings: 'ভাষা ছেটিংছ',\n        logout: 'লগ আউট',\n        welcome: 'স্বাগতম',\n        checkSymptomsPrompt: 'অসুস্থ অনুভৱ কৰিছে নেকি? এতিয়াই আপোনাৰ লক্ষণবোৰ পৰীক্ষা কৰক।',\n        getStarted: 'আৰম্ভ কৰক',\n        casesLast30Days: 'যোৱا ৩০ দিনত গোচৰ',\n        precautions: 'সতৰ্কতামূলক ব্যৱস্থা',\n        medicationSuggester: 'ঔষধৰ পৰামৰ্শ',\n        healthReminders: 'স্বাস্থ্য স্মাৰক',\n        reminders: 'স্মাৰক',\n        medicineChecker: 'ঔষধ পৰীক্ষক',\n        waterQuality: 'পানীৰ গুণগত মান',\n        aiChat: 'এআই চেট',\n        emergencyContacts: 'জৰুৰীকালীন যোগাযোগ',\n        viewReports: 'প্ৰতিবেদন চাওক',\n    };\n    translations.gu = {\n        dashboard: 'ડેશબોર્ડ',\n        symptomChecker: 'લક્ષણ તપાસનાર',\n        reports: 'સ્થાનિક અહેવાલો',\n        profile: 'પ્રોફાઇલ',\n        languageSettings: 'ભાષા સેટિંગ્સ',\n        logout: 'લૉગ આઉટ',\n        welcome: 'સ્વાગત છે',\n        checkSymptomsPrompt: 'અસ્વસ્થતા અનુભવો છો? હવે તમારા લક્ષણો તપાસો.',\n        getStarted: 'શરૂ કરો',\n        casesLast30Days: 'છેલ્લા 30 દિવસમાં કેસ',\n        precautions: 'સાવચેતીઓ',\n        medicationSuggester: 'દવા સૂચવનાર',\n        healthReminders: 'આરોગ્ય રીમાઇન્ડર્સ',\n        reminders: 'રીમાઇન્ડર્સ',\n        medicineChecker: 'દવા તપાસનાર',\n        waterQuality: 'પાણીની ગુણવત્તા',\n        aiChat: 'AI ચેટ',\n        emergencyContacts: 'ઇમરજન્સી સંપર્કો',\n        viewReports: 'અહેવાલો જુઓ',\n    };\n     translations.ta = {\n        dashboard: 'แดชบอร์ด',\n        symptomChecker: 'அறிகுறி சரிபார்ப்பு',\n        reports: 'உள்ளூர் அறிக்கைகள்',\n        profile: 'சுயவிவரம்',\n        languageSettings: 'மொழி அமைப்புகள்',\n        logout: 'வெளியேறு',\n        welcome: 'வரவேற்கிறோம்',\n        checkSymptomsPrompt: 'உடல்நிலை சரியில்லையா? உங்கள் அறிகுறிகளை இப்போது சரிபார்க்கவும்.',\n        getStarted: 'தொடங்குங்கள்',\n        casesLast30Days: 'கடந்த 30 நாட்களில் வழக்குகள்',\n        precautions: 'முன்னெச்சரிக்கைகள்',\n        medicationSuggester: 'மருந்து பரிந்துரையாளர்',\n        healthReminders: 'உடல்நல நினைவூட்டல்கள்',\n        reminders: 'நினைவூட்டல்கள்',\n        medicineChecker: 'மருந்து சரிபார்ப்பு',\n        waterQuality: 'நீரின் தரம்',\n        aiChat: 'AI அரட்டை',\n        emergencyContacts: 'அவசர தொடர்புகள்',\n        viewReports: 'அறிக்கைகளைப் பார்க்கவும்',\n    };\n    translations.te = {\n        dashboard: 'డాష్‌బోర్డ్',\n        symptomChecker: 'లక్షణాల తనిఖీ',\n        reports: 'స్థానిక నివేదికలు',\n        profile: 'ప్రొఫైల్',\n        languageSettings: 'భాషా సెట్టింగ్‌లు',\n        logout: 'లాగ్ అవుట్',\n        welcome: 'స్వాగతం',\n        checkSymptomsPrompt: 'అనారోగ్యంగా అనిపిస్తుందా? మీ లక్షణాలను ఇప్పుడు తనిఖీ చేయండి.',\n        getStarted: 'ప్రారంభించండి',\n        casesLast30Days: 'గత 30 రోజులలో కేసులు',\n        precautions: 'జాగ్రత్తలు',\n        medicationSuggester: 'మందుల సూచన',\n        healthReminders: 'ఆరోగ్య రిమైండర్‌లు',\n        reminders: 'రిమైండర్‌లు',\n        medicineChecker: 'మందుల తనిఖీ',\n        waterQuality: 'నీటి నాణ్యత',\n        aiChat: 'AI చాట్',\n        emergencyContacts: 'అత్యవసర పరిచయాలు',\n        viewReports: 'నివేదికలను వీక్షించండి',\n    };\n    translations.kn = {\n        dashboard: 'ಡ್ಯಾಶ್‌ಬೋರ್ಡ್',\n        symptomChecker: 'ರೋಗಲಕ್ಷಣ ಪರೀಕ್ಷಕ',\n        reports: 'ಸ್ಥಳೀಯ ವರದಿಗಳು',\n        profile: 'ಪ್ರೊಫೈಲ್',\n        languageSettings: 'ಭಾಷಾ ಸಂಯೋಜನೆಗಳು',\n        logout: 'ಲಾಗ್ ಔಟ್',\n        welcome: 'ಸ್ವಾಗತ',\n        checkSymptomsPrompt: 'ಅನಾರೋಗ್ಯ ಅನಿಸುತ್ತಿದೆಯೇ? ನಿಮ್ಮ ರೋಗಲಕ್ಷಣಗಳನ್ನು ಈಗಲೇ ಪರಿಶೀಲಿಸಿ.',\n        getStarted: 'ಪ್ರಾರಂಭಿಸಿ',\n        casesLast30Days: 'ಕಳೆದ 30 ದಿನಗಳಲ್ಲಿ ಪ್ರಕರಣಗಳು',\n        precautions: 'ಮುನ್ನೆಚ್ಚರಿಕೆಗಳು',\n        medicationSuggester: 'ಔಷಧಿ ಸೂಚಕ',\n        healthReminders: 'ಆರೋಗ್ಯ ಜ್ಞಾಪನೆಗಳು',\n        reminders: 'ಜ್ಞಾಪನೆಗಳು',\n        medicineChecker: 'ಔಷಧಿ ಪರೀಕ್ಷಕ',\n        waterQuality: 'ನೀರಿನ ಗುಣಮಟ್ಟ',\n        aiChat: 'AI ಚಾಟ್',\n        emergencyContacts: 'ತುರ್ತು ಸಂಪರ್ಕಗಳು',\n        viewReports: 'ವರದಿಗಳನ್ನು ವೀಕ್ಷಿಸಿ',\n    };\n     translations.ml = {\n        dashboard: 'ഡാഷ്ബോർഡ്',\n        symptomChecker: 'ലക്ഷണ പരിശോധകൻ',\n        reports: 'പ്രാദേശിക റിപ്പോർട്ടുകൾ',\n        profile: 'പ്രൊഫൈൽ',\n        languageSettings: 'ഭാഷാ ക്രമീകരണങ്ങൾ',\n        logout: 'ലോഗ് ഔട്ട്',\n        welcome: 'സ്വാഗതം',\n        checkSymptomsPrompt: 'സുഖമില്ലേ? നിങ്ങളുടെ ലക്ഷണങ്ങൾ ഇപ്പോൾ പരിശോധിക്കുക.',\n        getStarted: 'തുടങ്ങുക',\n        casesLast30Days: 'കഴിഞ്ഞ 30 ദിവസത്തെ കേസുകൾ',\n        precautions: 'മുൻകരുതലുകൾ',\n        medicationSuggester: 'മരുന്ന് നിർദ്ദേശകൻ',\n        healthReminders: 'ആരോഗ്യ ഓർമ്മപ്പെടുത്തലുകൾ',\n        reminders: 'ഓർമ്മപ്പെടുത്തലുകൾ',\n        medicineChecker: 'മരുന്ന് പരിശോധകൻ',\n        waterQuality: 'വെള്ളത്തിന്റെ ഗുണനിലവാരം',\n        aiChat: 'AI ചാറ്റ്',\n        emergencyContacts: 'അടിയന്തര കോൺടാക്റ്റുകൾ',\n        viewReports: 'റിപ്പോർട്ടുകൾ കാണുക',\n    };\n    translations.mr = {\n        dashboard: 'डॅशबोर्ड',\n        symptomChecker: 'लक्षण तपासक',\n        reports: 'स्थानिक अहवाल',\n        profile: 'प्रोफाइल',\n        languageSettings: 'भाषा सेटिंग्ज',\n        logout: 'लॉग आउट',\n        welcome: 'स्वागत आहे',\n        checkSymptomsPrompt: 'बरे वाटत नाहीये? आता तुमची लक्षणे तपासा.',\n        getStarted: 'सुरु',\n        casesLast30Days: 'गेल्या 30 दिवसांतील प्रकरणे',\n        precautions: 'काळजी',\n        medicationSuggester: 'औषध సూచక',\n        healthReminders: 'आरोग्य स्मरणपत्रे',\n        reminders: 'स्मरणपत्रे',\n        medicineChecker: 'औषध तपासक',\n        waterQuality: 'पाण्याची गुणवत्ता',\n        aiChat: 'AI चॅट',\n        emergencyContacts: 'आपत्कालीन संपर्क',\n        viewReports: 'अहवाल पहा',\n    };\n     translations.pa = {\n        dashboard: 'ਡੈਸ਼ਬੋਰਡ',\n        symptomChecker: 'ਲੱਛਣ ਜਾਂਚਕਰਤਾ',\n        reports: 'ਸਥਾਨਕ ਰਿਪੋਰਟਾਂ',\n        profile: 'ਪ੍ਰੋਫਾਈਲ',\n        languageSettings: 'ਭਾਸ਼ਾ ਸੈਟਿੰਗਾਂ',\n        logout: 'ਲਾਗ ਆਉਟ',\n        welcome: 'ਜੀ ਆਇਆਂ ਨੂੰ',\n        checkSymptomsPrompt: 'ਬਿਮਾਰ ਮਹਿਸੂਸ ਕਰ ਰਹੇ ਹੋ? ਹੁਣੇ ਆਪਣੇ ਲੱਛਣਾਂ ਦੀ ਜਾਂਚ ਕਰੋ।',\n        getStarted: 'ਸ਼ੁਰੂ ਕਰੋ',\n        casesLast30Days: 'ਪਿਛਲੇ 30 ਦਿਨਾਂ ਵਿੱਚ ਕੇਸ',\n        precautions: 'ਸਾਵਧਾਨੀਆਂ',\n        medicationSuggester: 'ਦਵਾਈ ਸੁਝਾਉਣ ਵਾਲਾ',\n        healthReminders: 'ਸਿਹਤ ਰੀਮਾਈਂਡਰ',\n        reminders: 'ਰੀਮਾਈਂਡਰ',\n        medicineChecker: 'ਦਵਾਈ ਜਾਂਚਕਰਤਾ',\n        waterQuality: 'ਪਾਣੀ ਦੀ ਗੁਣਵੱਤਾ',\n        aiChat: 'ਏਆਈ ਚੈਟ',\n        emergencyContacts: 'ਐਮਰਜੈਂਸੀ ਸੰਪਰਕ',\n        viewReports: 'ਰਿਪੋਰਟਾਂ ਵੇਖੋ',\n    };\n    translations.ur = {\n        dashboard: 'ڈیش بورڈ',\n        symptomChecker: 'علامت چیکر',\n        reports: 'مقامی رپورٹس',\n        profile: 'پروفائل',\n        languageSettings: 'زبان کی ترتیبات',\n        logout: 'لاگ آوٹ',\n        welcome: 'خوش آمدید',\n        checkSymptomsPrompt: 'بیمار محسوس کر رہے ہیں؟ اب اپنی علامات چیک کریں۔',\n        getStarted: 'شروع کریں',\n        casesLast30Days: 'گزشتہ 30 دنوں میں کیسز',\n        precautions: 'احتیاطی تدابیر',\n        medicationSuggester: 'دوا تجویز کرنے والا',\n        healthReminders: 'صحت کی یاد دہانیاں',\n        reminders: 'یاد دہانیاں',\n        medicineChecker: 'دوا چیکر',\n        waterQuality: 'پانی کا معیار',\n        aiChat: 'اے آئی چیٹ',\n        emergencyContacts: 'ہنگامی رابطے',\n        viewReports: 'رپورٹس دیکھیں',\n    };\n\n\n    return translations;\n}\n\nexport const translations = generateTranslations();\n\nexport type Translations = typeof translations;\nexport type Language = keyof Translations;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/language-provider.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport { translations, type Language, type Translations } from '@/lib/translations';\n\ninterface LanguageContextType {\n  language: Language | 'auto' | null;\n  setLanguage: (language: string) => void;\n  t: (key: keyof Translations[Language]) => string;\n  effectiveLanguage: Language;\n}\n\nexport const LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nconst getLanguageFromLocation = (address: string): Language => {\n    const lowerCaseAddress = address.toLowerCase();\n    if (lowerCaseAddress.includes('bengal')) return 'bn';\n    if (lowerCaseAddress.includes('assam')) return 'as';\n    if (lowerCaseAddress.includes('india')) return 'hi';\n    return 'en';\n}\n\nexport const LanguageProvider = ({ children }: { children: ReactNode }) => {\n  const [language, setLanguageState] = useState<Language | 'auto' | null>(null);\n  const [effectiveLanguage, setEffectiveLanguage] = useState<Language>('en');\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    const storedLanguage = localStorage.getItem('language') as Language | 'auto' | null;\n    if (storedLanguage && (translations[storedLanguage as Language] || storedLanguage === 'auto')) {\n      setLanguageState(storedLanguage);\n    } else {\n      setLanguageState(null);\n    }\n    setIsMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (language === 'auto') {\n      try {\n        const savedProfile = localStorage.getItem('userProfile');\n        if (savedProfile) {\n          const profile = JSON.parse(savedProfile);\n          if (profile.address) {\n            setEffectiveLanguage(getLanguageFromLocation(profile.address));\n            return;\n          }\n        }\n      } catch (e) {\n         console.error(\"Could not determine language from location\", e)\n      }\n      // Fallback to English if auto-detection fails\n      setEffectiveLanguage('en');\n    } else if (language && translations[language as Language]) {\n      setEffectiveLanguage(language as Language);\n    } else {\n      // Fallback for null or invalid language\n      setEffectiveLanguage('en');\n    }\n  }, [language]);\n\n  const setLanguage = (lang: string) => {\n    if (translations[lang as Language] || lang === 'auto') {\n      localStorage.setItem('language', lang);\n      setLanguageState(lang as Language | 'auto');\n    }\n  };\n  \n  const t = (key: keyof Translations[Language]): string => {\n    return translations[effectiveLanguage]?.[key] || (translations.en[key] as string) || String(key);\n  };\n  \n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t, effectiveLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAHA;;;;AAYO,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmC;AAE9E,MAAM,0BAA0B,CAAC;IAC7B,MAAM,mBAAmB,QAAQ,WAAW;IAC5C,IAAI,iBAAiB,QAAQ,CAAC,WAAW,OAAO;IAChD,IAAI,iBAAiB,QAAQ,CAAC,UAAU,OAAO;IAC/C,IAAI,iBAAiB,QAAQ,CAAC,UAAU,OAAO;IAC/C,OAAO;AACX;AAEO,MAAM,mBAAmB,CAAC,EAAE,QAAQ,EAA2B;IACpE,MAAM,CAAC,UAAU,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4B;IACxE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IACrE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB,aAAa,OAAO,CAAC;QAC5C,IAAI,kBAAkB,CAAC,0HAAA,CAAA,eAAY,CAAC,eAA2B,IAAI,mBAAmB,MAAM,GAAG;YAC7F,iBAAiB;QACnB,OAAO;YACL,iBAAiB;QACnB;QACA,aAAa;IACf,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,QAAQ;YACvB,IAAI;gBACF,MAAM,eAAe,aAAa,OAAO,CAAC;gBAC1C,IAAI,cAAc;oBAChB,MAAM,UAAU,KAAK,KAAK,CAAC;oBAC3B,IAAI,QAAQ,OAAO,EAAE;wBACnB,qBAAqB,wBAAwB,QAAQ,OAAO;wBAC5D;oBACF;gBACF;YACF,EAAE,OAAO,GAAG;gBACT,QAAQ,KAAK,CAAC,8CAA8C;YAC/D;YACA,8CAA8C;YAC9C,qBAAqB;QACvB,OAAO,IAAI,YAAY,0HAAA,CAAA,eAAY,CAAC,SAAqB,EAAE;YACzD,qBAAqB;QACvB,OAAO;YACL,wCAAwC;YACxC,qBAAqB;QACvB;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,cAAc,CAAC;QACnB,IAAI,0HAAA,CAAA,eAAY,CAAC,KAAiB,IAAI,SAAS,QAAQ;YACrD,aAAa,OAAO,CAAC,YAAY;YACjC,iBAAiB;QACnB;IACF;IAEA,MAAM,IAAI,CAAC;QACT,OAAO,0HAAA,CAAA,eAAY,CAAC,kBAAkB,EAAE,CAAC,IAAI,IAAK,0HAAA,CAAA,eAAY,CAAC,EAAE,CAAC,IAAI,IAAe,OAAO;IAC9F;IAEA,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;YAAU;YAAa;YAAG;QAAkB;kBAC5E;;;;;;AAGP","debugId":null}}]
}