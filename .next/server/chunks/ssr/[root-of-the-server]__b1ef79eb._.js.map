{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-1.5-flash-latest',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/medication-suggester.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides AI-powered suggestions for medications and home remedies based on user symptoms.\n *\n * - getMedicationSuggestions - A function to retrieve suggestions.\n * - MedicationSuggesterInput - The input type for the getMedicationSuggestions function.\n * - MedicationSuggesterOutput - The return type for the getMedicationSuggestions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst MedicationSuggesterInputSchema = z.object({\n  symptoms: z.string().describe('A description of the symptoms the user is experiencing.'),\n  age: z.number().optional().describe('The age of the user, if available.'),\n  language: z.string().describe('The language for the response.').optional(),\n});\nexport type MedicationSuggesterInput = z.infer<typeof MedicationSuggesterInputSchema>;\n\nconst SuggestedMedicineSchema = z.object({\n  name: z.string().describe('The name of the suggested over-the-counter medicine.'),\n  contraindications: z.array(z.string()).describe('A list of diseases or conditions where this medicine should be used with caution or avoided.'),\n});\n\nconst MedicationSuggesterOutputSchema = z.object({\n  suggestedMedicines: z.array(SuggestedMedicineSchema).describe('A list of common over-the-counter medicines that might help alleviate symptoms, including potential contraindications.'),\n  homeRemedies: z.array(z.string()).describe('A list of home remedies that may help with the symptoms.'),\n});\nexport type MedicationSuggesterOutput = z.infer<typeof MedicationSuggesterOutputSchema>;\n\nexport async function getMedicationSuggestions(input: MedicationSuggesterInput): Promise<MedicationSuggesterOutput> {\n  return medicationSuggesterFlow(input);\n}\n\nconst medicationSuggesterPrompt = ai.definePrompt({\n  name: 'medicationSuggesterPrompt',\n  input: {schema: MedicationSuggesterInputSchema},\n  output: {schema: MedicationSuggesterOutputSchema},\n  prompt: `You are a medical assistant. Based on the symptoms and age (if provided) by the user, suggest some common over-the-counter medicines and home remedies that might help. Tailor your suggestions to be appropriate for the user's age.\n\nFor each medicine you suggest, you MUST also list any common diseases or conditions that would be a contraindication for its use (e.g., for Ibuprofen, mention stomach ulcers or kidney disease). If there are no common contraindications, provide an empty array.\n\nYou must always include a strong and clear disclaimer that the user should consult a doctor before taking any new medication or trying any remedies, as this is not professional medical advice.\n\nSymptoms: {{{symptoms}}}\n{{#if age}}\nAge: {{{age}}}\n{{/if}}\n{{#if language}}\nThe user's preferred language is {{language}}. Respond in that language.\n{{/if}}\n`,\n});\n\nconst medicationSuggesterFlow = ai.defineFlow(\n  {\n    name: 'medicationSuggesterFlow',\n    inputSchema: MedicationSuggesterInputSchema,\n    outputSchema: MedicationSuggesterOutputSchema,\n  },\n  async input => {\n    const {output} = await medicationSuggesterPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,KAAK,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACpC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,kCAAkC,QAAQ;AAC1E;AAGA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,mBAAmB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAClD;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,oBAAoB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,yBAAyB,QAAQ,CAAC;IAC9D,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAC7C;AAGO,eAAe,yBAAyB,KAA+B;IAC5E,OAAO,wBAAwB;AACjC;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAChD,MAAM;IACN,OAAO;QAAC,QAAQ;IAA8B;IAC9C,QAAQ;QAAC,QAAQ;IAA+B;IAChD,QAAQ,CAAC;;;;;;;;;;;;;AAaX,CAAC;AACD;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,0BAA0B;IACjD,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/dashboard/medication-suggester/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMedicationSuggestions as '404d7b1710f969ae847fc3196dc9cbbccae9f0cf3b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/medication-suggester/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/medication-suggester/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/medication-suggester/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/medication-suggester/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/medication-suggester/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/medication-suggester/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}