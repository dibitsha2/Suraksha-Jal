{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\n\nconst firebaseConfig = {\n  projectId: \"suraksha-jal\",\n  appId: \"1:806914489596:web:e91264c1a0e7f832b96b79\",\n  storageBucket: \"suraksha-jal.firebasestorage.app\",\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: \"suraksha-jal.firebaseapp.com\",\n  messagingSenderId: \"806914489596\",\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\n\nexport { app, auth };\n"],"names":[],"mappings":";;;;AAQU;AAPV;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,MAAM;IACN,YAAY;IACZ,mBAAmB;AACrB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/health-worker-id-verification.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Verifies the validity of a health worker's government-issued ID using AI.\n *\n * - verifyHealthWorkerId - A function that verifies the ID.\n * - VerifyHealthWorkerIdInput - The input type for the verifyHealthWorkerId function.\n * - VerifyHealthWorkerIdOutput - The return type for the verifyHealthWorkerId function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst VerifyHealthWorkerIdInputSchema = z.object({\n  idDataUri: z\n    .string()\n    .describe(\n      \"A government-issued health worker ID, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type VerifyHealthWorkerIdInput = z.infer<typeof VerifyHealthWorkerIdInputSchema>;\n\nconst VerifyHealthWorkerIdOutputSchema = z.object({\n  isValid: z.boolean().describe('Whether the ID is valid or not.'),\n  reason: z.string().describe('The reason for the ID being invalid, if applicable.'),\n});\nexport type VerifyHealthWorkerIdOutput = z.infer<typeof VerifyHealthWorkerIdOutputSchema>;\n\nexport async function verifyHealthWorkerId(input: VerifyHealthWorkerIdInput): Promise<VerifyHealthWorkerIdOutput> {\n  return verifyHealthWorkerIdFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'verifyHealthWorkerIdPrompt',\n  input: {schema: VerifyHealthWorkerIdInputSchema},\n  output: {schema: VerifyHealthWorkerIdOutputSchema},\n  prompt: `You are an AI expert in verifying the validity of government-issued health worker IDs.\n\nYou will be provided with an image of the ID. You must determine if the ID is valid or not.\nIf the ID is not valid, explain why in the reason field. If the ID is valid, the reason field should be left empty.\n\nConsider factors like image quality, clarity of information, signs of tampering, and consistency with known ID formats.\n\nImage: {{media url=idDataUri}}\n`,\n});\n\nconst verifyHealthWorkerIdFlow = ai.defineFlow(\n  {\n    name: 'verifyHealthWorkerIdFlow',\n    inputSchema: VerifyHealthWorkerIdInputSchema,\n    outputSchema: VerifyHealthWorkerIdOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA4BsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/auth/auth-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useRouter } from 'next/navigation';\nimport {\n  FileCheck2,\n  FileX2,\n  Loader2,\n  Mail,\n  MapPin,\n  ScanLine,\n  User,\n  Lock,\n} from 'lucide-react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useToast } from '@/hooks/use-toast';\nimport { verifyHealthWorkerId } from '@/ai/flows/health-worker-id-verification';\n\n// Schemas\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst userRegisterSchema = z.object({\n  username: z.string().min(2, 'Username is too short'),\n  email: z.string().email('Invalid email address'),\n  address: z.string().min(5, 'Address is too short'),\n  password: z.string().min(8, 'Password must be at least 8 characters'),\n});\n\nconst healthWorkerRegisterSchema = userRegisterSchema.extend({\n    healthId: z.any().refine(file => file instanceof File, 'ID card image is required.'),\n});\n\n\ntype LoginValues = z.infer<typeof loginSchema>;\ntype UserRegisterValues = z.infer<typeof userRegisterSchema>;\ntype HealthWorkerRegisterValues = z.infer<typeof healthWorkerRegisterSchema>;\n\n\n// Main Component\nexport default function AuthForm() {\n  const [activeTab, setActiveTab] = useState('login');\n  \n  return (\n    <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-2\">\n        <TabsTrigger value=\"login\">Login</TabsTrigger>\n        <TabsTrigger value=\"register\">Register</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"login\">\n        <LoginForm />\n      </TabsContent>\n      <TabsContent value=\"register\">\n        <RegisterForm />\n      </TabsContent>\n    </Tabs>\n  );\n}\n\n// Login Form Component\nfunction LoginForm() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(false);\n\n  const form = useForm<LoginValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: { email: '', password: '' },\n  });\n\n  const onSubmit: SubmitHandler<LoginValues> = async (data) => {\n    setLoading(true);\n    try {\n        const userCredential = await signInWithEmailAndPassword(auth, data.email, data.password);\n        const user = userCredential.user;\n        \n        let profile: any = {};\n        const existingProfile = localStorage.getItem('userProfile');\n        if (existingProfile) {\n            try {\n                profile = JSON.parse(existingProfile);\n            } catch (e) {\n                console.error(\"Error parsing user profile from local storage\", e);\n            }\n        }\n        \n        const updatedProfile = {\n            ...profile, // Keep existing fields like address, age, etc.\n            email: user.email,\n            name: profile.name || user.displayName, // Prefer existing name\n        };\n\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n\n        toast({\n          title: 'Login Successful',\n          description: 'Redirecting to dashboard...',\n        });\n        router.push('/dashboard');\n    } catch (error: any) {\n        console.error('Login error:', error);\n        let description = 'An unexpected error occurred.';\n        switch (error.code) {\n            case 'auth/user-not-found':\n                description = 'Account not found. Please register first.';\n                break;\n            case 'auth/wrong-password':\n            case 'auth/invalid-credential':\n                description = 'Invalid email or password. Please try again.';\n                break;\n            case 'auth/invalid-email':\n                description = 'The email address you entered is not valid.';\n                break;\n            case 'auth/too-many-requests':\n                description = 'Too many login attempts. Please try again later.';\n                break;\n            case 'auth/operation-not-allowed':\n                description = 'Email/Password sign-in is not enabled. Please contact an administrator.';\n                break;\n        }\n        toast({\n            variant: 'destructive',\n            title: 'Login Failed',\n            description: description,\n        });\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Welcome Back</CardTitle>\n        <CardDescription>Enter your credentials to access your account.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                       <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input type=\"password\" placeholder=\"••••••••\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Sign In\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Register Form Component\nfunction RegisterForm() {\n    const [activeTab, setActiveTab] = useState('user');\n\n    return (\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"user\">General User</TabsTrigger>\n                <TabsTrigger value=\"health-worker\">Health Worker</TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"user\">\n                <UserRegisterForm />\n            </TabsContent>\n            <TabsContent value=\"health-worker\">\n                <HealthWorkerRegisterForm />\n            </TabsContent>\n        </Tabs>\n    );\n}\n\nfunction UserRegisterForm() {\n    const router = useRouter();\n    const { toast } = useToast();\n    const form = useForm<UserRegisterValues>({\n        resolver: zodResolver(userRegisterSchema),\n        defaultValues: { username: '', email: '', address: '', password: '' },\n    });\n\n    const onSubmit: SubmitHandler<UserRegisterValues> = async (data) => {\n        try {\n            const userCredential = await createUserWithEmailAndPassword(auth, data.email, data.password);\n            await updateProfile(userCredential.user, { displayName: data.username });\n\n            const profile = {\n                name: data.username,\n                email: data.email,\n                address: data.address,\n                age: undefined,\n                weight: undefined,\n                height: undefined,\n                bloodGroup: undefined,\n            };\n            localStorage.setItem('userProfile', JSON.stringify(profile));\n\n            toast({\n                title: 'Registration Successful',\n                description: \"You have been logged in automatically.\",\n            });\n            router.push('/dashboard');\n        } catch (error: any) {\n            console.error('Registration error:', error);\n            let description = 'An unexpected error occurred.';\n            if (error.code === 'auth/email-already-in-use') {\n                description = 'This email is already registered. Please try logging in.';\n            } else if (error.code === 'auth/weak-password') {\n                description = 'The password is too weak. Please use at least 8 characters.';\n            }\n             toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description,\n            });\n        }\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Create an Account</CardTitle>\n                <CardDescription>Join our community to stay informed.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        <FormField control={form.control} name=\"username\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Username</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"your_username\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"email\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Email</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                         <FormField control={form.control} name=\"address\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Address</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input placeholder=\"Your city, state\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"password\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Password</FormLabel>\n                                <FormControl>\n                                    <div className=\"relative\">\n                                        <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                        <Input type=\"password\" placeholder=\"Choose a strong password\" {...field} className=\"pl-10\" />\n                                    </div>\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting}>\n                            {form.formState.isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Create Account\n                        </Button>\n                    </form>\n                </Form>\n            </CardContent>\n        </Card>\n    );\n}\n\nfunction HealthWorkerRegisterForm() {\n    const router = useRouter();\n    const { toast } = useToast();\n    const [idStatus, setIdStatus] = useState<'idle' | 'verifying' | 'valid' | 'invalid'>('idle');\n    const [verificationReason, setVerificationReason] = useState('');\n    const [filePreview, setFilePreview] = useState<string | null>(null);\n\n\n    const form = useForm<HealthWorkerRegisterValues>({\n        resolver: zodResolver(healthWorkerRegisterSchema),\n        defaultValues: { username: '', email: '', address: '', password: '' },\n    });\n\n    const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            form.setValue('healthId', file);\n            setFilePreview(URL.createObjectURL(file));\n            setIdStatus('verifying');\n            setVerificationReason('');\n\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = async () => {\n                const base64String = reader.result as string;\n                try {\n                    const result = await verifyHealthWorkerId({ idDataUri: base64String });\n                    if (result.isValid) {\n                        setIdStatus('valid');\n                    } else {\n                        setIdStatus('invalid');\n                        setVerificationReason(result.reason || 'The provided ID could not be verified.');\n                    }\n                } catch (error) {\n                    console.error(\"ID verification error:\", error);\n                    setIdStatus('invalid');\n                    setVerificationReason('An error occurred during verification. Please try again.');\n                }\n            };\n        }\n    };\n\n    const onSubmit: SubmitHandler<HealthWorkerRegisterValues> = async (data) => {\n        if (idStatus !== 'valid') {\n            toast({\n                variant: 'destructive',\n                title: 'ID Not Verified',\n                description: 'Please upload and verify your health worker ID before registering.',\n            });\n            return;\n        }\n\n        try {\n            const userCredential = await createUserWithEmailAndPassword(auth, data.email, data.password);\n            await updateProfile(userCredential.user, { displayName: data.username });\n            \n            const profile = {\n                name: data.username,\n                email: data.email,\n                address: data.address,\n                age: undefined,\n                weight: undefined,\n                height: undefined,\n                bloodGroup: undefined,\n                isHealthWorker: true,\n            };\n            localStorage.setItem('userProfile', JSON.stringify(profile));\n\n            toast({\n                title: 'Registration Successful',\n                description: 'Your health worker account has been created.',\n            });\n            router.push('/dashboard');\n        } catch (error: any) {\n             console.error('Health worker registration error:', error);\n             toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description: 'An unexpected error occurred. Please try again.',\n            });\n        }\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Health Worker Registration</CardTitle>\n                <CardDescription>Verify your ID to get started.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        {/* Basic fields from User form */}\n                        <FormField control={form.control} name=\"username\" render={({ field }) => (\n                            <FormItem><FormLabel>Username</FormLabel><FormControl><div className=\"relative\"><User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"your_username\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"email\" render={({ field }) => (\n                           <FormItem><FormLabel>Email</FormLabel><FormControl><div className=\"relative\"><Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                         <FormField control={form.control} name=\"address\" render={({ field }) => (\n                            <FormItem><FormLabel>Address</FormLabel><FormControl><div className=\"relative\"><MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"Your city, state\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"password\" render={({ field }) => (\n                           <FormItem><FormLabel>Password</FormLabel><FormControl><div className=\"relative\"><Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input type=\"password\" placeholder=\"Choose a strong password\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        \n                        {/* Health Worker ID Field */}\n                        <FormField\n                            control={form.control}\n                            name=\"healthId\"\n                            render={() => (\n                                <FormItem>\n                                    <FormLabel>Health Worker ID</FormLabel>\n                                    <FormControl>\n                                        <div className=\"relative\">\n                                            <ScanLine className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                                            <Input \n                                                type=\"file\" \n                                                accept=\"image/*\"\n                                                className=\"pl-10 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                                                onChange={handleFileChange}\n                                            />\n                                        </div>\n                                    </FormControl>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n\n                        {/* Verification Status */}\n                        {idStatus !== 'idle' && (\n                            <div className=\"p-3 rounded-md flex items-center gap-3 text-sm\n                                bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-300 data-[status=valid]:bg-green-100 data-[status=valid]:dark:bg-green-900/20 data-[status=valid]:text-green-800 data-[status=valid]:dark:text-green-300\n                                data-[status=invalid]:bg-red-100 data-[status=invalid]:dark:bg-red-900/20 data-[status=invalid]:text-red-800 data-[status=invalid]:dark:text-red-300\"\n                                data-status={idStatus}\n                            >\n                                {idStatus === 'verifying' && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n                                {idStatus === 'valid' && <FileCheck2 className=\"h-4 w-4\" />}\n                                {idStatus === 'invalid' && <FileX2 className=\"h-4 w-4\" />}\n                                <div>\n                                    {idStatus === 'verifying' && 'Verifying your ID, please wait...'}\n                                    {idStatus === 'valid' && 'ID verified successfully!'}\n                                    {idStatus === 'invalid' && `Verification Failed: ${verificationReason}`}\n                                </div>\n                            </div>\n                        )}\n                        \n                        <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting || idStatus !== 'valid'}>\n                            {form.formState.isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Create Health Worker Account\n                        </Button>\n                    </form>\n                </Form>\n            </CardContent>\n        </Card>\n    );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}