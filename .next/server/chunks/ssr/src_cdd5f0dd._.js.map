{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/health-worker-id-verification.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Verifies a health worker's face using AI.\n *\n * - verifyHealthWorkerId - A function that verifies the face.\n * - VerifyHealthWorkerIdInput - The input type for the verifyHealthWorkerId function.\n * - VerifyHealthWorkerIdOutput - The return type for the verifyHealthWorkerId function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst VerifyHealthWorkerIdInputSchema = z.object({\n  idDataUri: z\n    .string()\n    .describe(\n      \"A photo of the user's face, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type VerifyHealthWorkerIdInput = z.infer<typeof VerifyHealthWorkerIdInputSchema>;\n\nconst VerifyHealthWorkerIdOutputSchema = z.object({\n  isValid: z.boolean().describe('Whether the face is a valid, real human face.'),\n  reason: z.string().describe('The reason for the face being invalid, if applicable. For example, if it is blurry, not a face, or a picture of a picture.'),\n});\nexport type VerifyHealthWorkerIdOutput = z.infer<typeof VerifyHealthWorkerIdOutputSchema>;\n\nexport async function verifyHealthWorkerId(input: VerifyHealthWorkerIdInput): Promise<VerifyHealthWorkerIdOutput> {\n  return verifyHealthWorkerIdFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'verifyHealthWorkerIdPrompt',\n  input: {schema: VerifyHealthWorkerIdInputSchema},\n  output: {schema: VerifyHealthWorkerIdOutputSchema},\n  prompt: `You are an AI expert in verifying a person's identity from a captured photo of their face.\n\nYou will be provided with an image of a person's face. You must determine if it is a valid, clear, live photo of a real human.\n\n- The image must contain a single, clear face.\n- The face must not be obscured.\n- The image must not be blurry.\n- The image must appear to be a live capture, not a photo of another screen or a printed photograph.\n\nIf the face is not valid, explain why in the 'reason' field (e.g., \"Image is too blurry,\" \"No face detected,\" or \"Image appears to be a photo of a screen.\"). If the face is valid, the 'reason' field should be left empty.\n\nImage: {{media url=idDataUri}}\n`,\n});\n\nconst verifyHealthWorkerIdFlow = ai.defineFlow(\n  {\n    name: 'verifyHealthWorkerIdFlow',\n    inputSchema: VerifyHealthWorkerIdInputSchema,\n    outputSchema: VerifyHealthWorkerIdOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n\n    "],"names":[],"mappings":";;;;;;IA6BsB,uBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard-health-worker/_components/health-worker-auth-form.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useRouter } from 'next/navigation';\nimport {\n  FileCheck2,\n  FileX2,\n  Loader2,\n  Mail,\n  MapPin,\n  Camera,\n  User,\n  Lock,\n} from 'lucide-react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\nimport { verifyHealthWorkerId } from '@/ai/flows/health-worker-id-verification';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\n// Schemas\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst healthWorkerRegisterSchema = z.object({\n    username: z.string().min(2, 'Username is too short'),\n    email: z.string().email('Invalid email address'),\n    address: z.string().min(5, 'Address is too short'),\n    password: z.string().min(8, 'Password must be at least 8 characters'),\n    faceId: z.string().min(1, 'Face ID capture is required.'),\n});\n\n\ntype LoginValues = z.infer<typeof loginSchema>;\ntype HealthWorkerRegisterValues = z.infer<typeof healthWorkerRegisterSchema>;\n\n\n// Main Component\nexport default function HealthWorkerAuthForm({ initialTab = 'login' }: { initialTab?: 'login' | 'register' }) {\n  return (\n    <Tabs defaultValue={initialTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"login\">Login</TabsTrigger>\n            <TabsTrigger value=\"register\">Register</TabsTrigger>\n        </TabsList>\n        <TabsContent value=\"login\">\n            <LoginForm />\n        </TabsContent>\n        <TabsContent value=\"register\">\n            <HealthWorkerRegisterForm />\n        </TabsContent>\n    </Tabs>\n  );\n}\n\n// Login Form Component\nfunction LoginForm() {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [loading, setLoading] = useState(false);\n\n  const form = useForm<LoginValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: { email: '', password: '' },\n  });\n\n  const onSubmit: SubmitHandler<LoginValues> = async (data) => {\n    setLoading(true);\n    try {\n        const userCredential = await signInWithEmailAndPassword(auth, data.email, data.password);\n        const user = userCredential.user;\n        \n        const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n        const userProfile = allProfiles[user.email!];\n        \n        if (!userProfile || !userProfile.isHealthWorker) {\n            await auth.signOut();\n            toast({\n                variant: 'destructive',\n                title: 'Access Denied',\n                description: 'This email is not registered as a health worker.',\n            });\n            setLoading(false);\n            return;\n        }\n\n        const updatedProfile = {\n            ...userProfile,\n            name: userProfile?.name || user.displayName,\n            email: user.email,\n            photoURL: userProfile?.photoURL || user.photoURL,\n        };\n\n        localStorage.setItem('userProfile', JSON.stringify(updatedProfile));\n        allProfiles[user.email!] = updatedProfile;\n        localStorage.setItem('userProfiles', JSON.stringify(allProfiles));\n\n\n        toast({\n          title: 'Login Successful',\n          description: 'Redirecting to health worker dashboard...',\n        });\n\n        router.push('/dashboard-health-worker');\n\n    } catch (error: any) {\n        console.error('Login error:', error);\n        let description = 'An unexpected error occurred.';\n        switch (error.code) {\n            case 'auth/user-not-found':\n            case 'auth/wrong-password':\n            case 'auth/invalid-credential':\n                description = 'Invalid email or password. Please try again.';\n                break;\n            case 'auth/invalid-email':\n                description = 'The email address you entered is not valid.';\n                break;\n            case 'auth/too-many-requests':\n                description = 'Too many login attempts. Please try again later.';\n                break;\n        }\n        toast({\n            variant: 'destructive',\n            title: 'Login Failed',\n            description: description,\n        });\n    } finally {\n        setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"border-t-0 rounded-t-none\">\n      <CardHeader>\n        <CardTitle>Health Worker Login</CardTitle>\n        <CardDescription>Enter your credentials to access the health worker portal.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                      <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"password\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Password</FormLabel>\n                  <FormControl>\n                    <div className=\"relative\">\n                       <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                      <Input type=\"password\" placeholder=\"••••••••\" {...field} className=\"pl-10\" />\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" className=\"w-full\" disabled={loading}>\n              {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n              Sign In as Health Worker\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n\n\nfunction HealthWorkerRegisterForm() {\n    const router = useRouter();\n    const { toast } = useToast();\n    const [idStatus, setIdStatus] = useState<'idle' | 'verifying' | 'valid' | 'invalid'>('idle');\n    const [verificationReason, setVerificationReason] = useState('');\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [hasCameraPermission, setHasCameraPermission] = useState<boolean | null>(null);\n\n    const form = useForm<HealthWorkerRegisterValues>({\n        resolver: zodResolver(healthWorkerRegisterSchema),\n        defaultValues: { username: '', email: '', address: '', password: '', faceId: '' },\n    });\n\n    useEffect(() => {\n        const getCameraPermission = async () => {\n          try {\n            const stream = await navigator.mediaDevices.getUserMedia({video: true});\n            setHasCameraPermission(true);\n    \n            if (videoRef.current) {\n              videoRef.current.srcObject = stream;\n            }\n          } catch (error) {\n            console.error('Error accessing camera:', error);\n            setHasCameraPermission(false);\n            toast({\n              variant: 'destructive',\n              title: 'Camera Access Denied',\n              description: 'Please enable camera permissions in your browser settings to use this app.',\n            });\n          }\n        };\n    \n        getCameraPermission();\n\n        return () => {\n            if (videoRef.current && videoRef.current.srcObject) {\n                const stream = videoRef.current.srcObject as MediaStream;\n                stream.getTracks().forEach(track => track.stop());\n            }\n        }\n      }, [toast]);\n\n\n    const handleCaptureAndVerify = async () => {\n        if (videoRef.current && canvasRef.current) {\n            setIdStatus('verifying');\n            setVerificationReason('');\n\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            const context = canvas.getContext('2d');\n            if (context) {\n                context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n                const dataUri = canvas.toDataURL('image/jpeg');\n                form.setValue('faceId', dataUri);\n                \n                try {\n                    const result = await verifyHealthWorkerId({ idDataUri: dataUri });\n                    if (result.isValid) {\n                        setIdStatus('valid');\n                    } else {\n                        setIdStatus('invalid');\n                        setVerificationReason(result.reason || 'The captured face could not be verified.');\n                        form.setValue('faceId', ''); // Clear invalid data\n                    }\n                } catch (error: any) {\n                    console.error(\"Face verification error:\", error);\n                    let reason = 'An error occurred during verification. Please try again.';\n                    if (error instanceof Error && error.message.includes('503')) {\n                        reason = 'The verification service is currently overloaded. Please wait a moment and try again.';\n                    }\n                    setIdStatus('invalid');\n                    setVerificationReason(reason);\n                    form.setValue('faceId', '');\n                }\n            }\n        }\n    };\n\n    const onSubmit: SubmitHandler<HealthWorkerRegisterValues> = async (data) => {\n        if (idStatus !== 'valid') {\n            toast({\n                variant: 'destructive',\n                title: 'Face Not Verified',\n                description: 'Please capture and verify your face before registering.',\n            });\n            return;\n        }\n\n        form.formState.isSubmitting = true;\n        try {\n            const userCredential = await createUserWithEmailAndPassword(auth, data.email, data.password);\n            await updateProfile(userCredential.user, { displayName: data.username });\n            \n            const profile = {\n                name: data.username,\n                email: data.email,\n                address: data.address,\n                isHealthWorker: true,\n                photoURL: data.faceId // Save face capture as profile picture\n            };\n            \n            // Set current user profile\n            localStorage.setItem('userProfile', JSON.stringify(profile));\n            // Add to all profiles object, keyed by email\n            const allProfiles = JSON.parse(localStorage.getItem('userProfiles') || '{}');\n            allProfiles[data.email] = profile;\nlocalStorage.setItem('userProfiles', JSON.stringify(allProfiles));\n\n            toast({\n                title: 'Registration Successful',\n                description: 'Your health worker account has been created.',\n            });\n            router.push('/dashboard-health-worker');\n        } catch (error: any) {\n             console.error('Health worker registration error:', error);\n             let description = 'An unexpected error occurred. Please try again.';\n             if (error.code === 'auth/email-already-in-use') {\n                 description = 'This email is already registered as a health worker. Please try logging in.';\n             }\n             toast({\n                variant: 'destructive',\n                title: 'Registration Failed',\n                description,\n            });\n        } finally {\n            form.formState.isSubmitting = false;\n        }\n    };\n\n    return (\n        <Card className=\"border-t-0 rounded-t-none\">\n            <CardHeader>\n                <CardTitle>Health Worker Registration</CardTitle>\n                <CardDescription>Verify your face to get started.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        {/* Basic fields */}\n                        <FormField control={form.control} name=\"username\" render={({ field }) => (\n                            <FormItem><FormLabel>Username</FormLabel><FormControl><div className=\"relative\"><User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"your_username\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"email\" render={({ field }) => (\n                           <FormItem><FormLabel>Email</FormLabel><FormControl><div className=\"relative\"><Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"your.email@example.com\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                         <FormField control={form.control} name=\"address\" render={({ field }) => (\n                            <FormItem><FormLabel>Address</FormLabel><FormControl><div className=\"relative\"><MapPin className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input placeholder=\"Your city, state\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"password\" render={({ field }) => (\n                           <FormItem><FormLabel>Password</FormLabel><FormControl><div className=\"relative\"><Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" /><Input type=\"password\" placeholder=\"Choose a strong password\" {...field} className=\"pl-10\" /></div></FormControl><FormMessage /></FormItem>\n                        )} />\n                        \n                        {/* Face ID Field */}\n                        <FormField\n                            control={form.control}\n                            name=\"faceId\"\n                            render={() => (\n                                <FormItem>\n                                    <FormLabel>Face Verification</FormLabel>\n                                    <FormControl>\n                                        <div className=\"space-y-4\">\n                                            <div className=\"relative aspect-video w-full overflow-hidden rounded-md border bg-muted\">\n                                                <video ref={videoRef} className=\"w-full h-full object-cover transform -scale-x-100\" autoPlay muted playsInline />\n                                                <canvas ref={canvasRef} className=\"hidden\" />\n                                                {hasCameraPermission === false && (\n                                                    <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-black/50 text-white p-4\">\n                                                        <Camera className=\"h-10 w-10 mb-2\" />\n                                                        <p className=\"text-center font-semibold\">Camera access is required for verification.</p>\n                                                        <p className=\"text-center text-sm\">Please allow camera access in your browser settings.</p>\n                                                    </div>\n                                                )}\n                                            </div>\n                                            <Button type=\"button\" onClick={handleCaptureAndVerify} disabled={idStatus === 'verifying' || hasCameraPermission !== true}>\n                                                {idStatus === 'verifying' ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <Camera className=\"mr-2 h-4 w-4\" />}\n                                                {idStatus === 'valid' ? 'Re-capture' : 'Capture & Verify'}\n                                            </Button>\n                                        </div>\n                                    </FormControl>\n                                    <FormMessage />\n                                </FormItem>\n                            )}\n                        />\n                        \n                        {/* Verification Status */}\n                         {idStatus !== 'idle' && (\n                            <div className=\"p-3 rounded-md flex items-center gap-3 text-sm\n                                bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-300 data-[status=valid]:bg-green-100 data-[status=valid]:dark:bg-green-900/20 data-[status=valid]:text-green-800 data-[status=valid]:dark:text-green-300\n                                data-[status=invalid]:bg-red-100 data-[status=invalid]:dark:bg-red-900/20 data-[status=invalid]:text-red-800 data-[status=invalid]:dark:text-red-300\"\n                                data-status={idStatus}\n                            >\n                                {idStatus === 'verifying' && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n                                {idStatus === 'valid' && <FileCheck2 className=\"h-4 w-4\" />}\n                                {idStatus === 'invalid' && <FileX2 className=\"h-4 w-4\" />}\n                                <div>\n                                    {idStatus === 'verifying' && 'Verifying your face, please wait...'}\n                                    {idStatus === 'valid' && 'Face verified successfully!'}\n                                    {idStatus === 'invalid' && `Verification Failed: ${verificationReason}`}\n                                </div>\n                            </div>\n                        )}\n                        \n                        <Button type=\"submit\" className=\"w-full\" disabled={form.formState.isSubmitting || idStatus !== 'valid'}>\n                            {form.formState.isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                            Create Health Worker Account\n                        </Button>\n                    </form>\n                </Form>\n            </CardContent>\n        </Card>\n    );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard-health-worker/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { SurakshaJalLogo } from '@/components/icons';\nimport HealthWorkerAuthForm from '../_components/health-worker-auth-form';\n\nexport default function HealthWorkerLoginPage() {\n  return (\n      <div className=\"w-full max-w-md\">\n        <div className=\"mb-8 flex flex-col items-center gap-4 text-center\">\n          <SurakshaJalLogo className=\"w-20 h-20 text-primary\" />\n          <h1 className=\"text-3xl font-bold text-primary font-headline\">Suraksha Jal</h1>\n          <p className=\"text-muted-foreground\">\n            Health Worker Portal\n          </p>\n        </div>\n        <HealthWorkerAuthForm initialTab=\"login\" />\n      </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACI,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,kBAAe;wBAAC,WAAU;;;;;;kCAC3B,8OAAC;wBAAG,WAAU;kCAAgD;;;;;;kCAC9D,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;0BAIvC,8OAAC,+LAAA,CAAA,UAAoB;gBAAC,YAAW;;;;;;;;;;;;AAGzC","debugId":null}}]
}